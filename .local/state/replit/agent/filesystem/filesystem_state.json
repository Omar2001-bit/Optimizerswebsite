{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a modern full-stack web application built with React and Express.js that appears to be a Conversion Rate Optimization (CRO) service website. The application features a sophisticated landing page with multiple sections showcasing CRO services, client results, ROI calculators, and contact forms. It's designed as a business website for a CRO agency targeting GCC markets, with comprehensive UI components and a clean, professional design system.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development\n- **Routing**: Wouter for lightweight client-side routing\n- **UI Framework**: Shadcn/ui components built on Radix UI primitives for accessible, customizable components\n- **Styling**: Tailwind CSS with custom design tokens and CSS variables for consistent theming\n- **State Management**: TanStack Query (React Query) for server state management and data fetching\n- **Build Tool**: Vite for fast development and optimized production builds\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework for HTTP server\n- **Language**: TypeScript with ESM modules for modern JavaScript features\n- **Storage Interface**: Abstracted storage layer with in-memory implementation (MemStorage) and interface for future database integration\n- **Development Setup**: Custom Vite integration for seamless full-stack development\n\n## Database & ORM\n- **ORM**: Drizzle ORM configured for PostgreSQL with type-safe database operations\n- **Database**: PostgreSQL (via Neon serverless) with connection pooling\n- **Schema**: Centralized schema definitions in shared directory for type consistency\n- **Migrations**: Drizzle Kit for database migration management\n\n## Component System\n- **Design System**: Comprehensive UI component library with consistent styling\n- **Accessibility**: Built on Radix UI primitives ensuring WCAG compliance\n- **Theming**: CSS custom properties with light/dark mode support\n- **Icons**: Lucide React for consistent iconography\n\n## Development Tools\n- **Type Safety**: Strict TypeScript configuration across client, server, and shared code\n- **Code Quality**: ESLint and Prettier for consistent code formatting\n- **Build Process**: Separate build steps for client (Vite) and server (esbuild)\n- **Hot Reload**: Development server with HMR for rapid iteration\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL database for production data storage\n- **Drizzle ORM**: Type-safe database operations and schema management\n\n## UI and Design\n- **Radix UI**: Headless UI components for accessibility and customization\n- **Tailwind CSS**: Utility-first CSS framework for rapid styling\n- **Lucide React**: Icon library for consistent visual elements\n- **Google Fonts**: Custom font loading (Sora, DM Sans, Fira Code, Geist Mono)\n\n## Development and Build Tools\n- **Vite**: Build tool and development server with plugins for React and error handling\n- **TypeScript**: Static type checking and enhanced developer experience\n- **PostCSS**: CSS processing with Tailwind CSS integration\n- **ESBuild**: Fast JavaScript bundler for server-side code\n\n## State Management and Data Fetching\n- **TanStack Query**: Server state management, caching, and data synchronization\n- **React Hook Form**: Form state management with validation\n- **Zod**: Schema validation for type-safe data handling\n\n## Utilities and Libraries\n- **Date-fns**: Date manipulation and formatting utilities\n- **Class Variance Authority**: Type-safe CSS class composition\n- **Clsx & Tailwind Merge**: Conditional CSS class handling\n- **React Router (Wouter)**: Lightweight routing solution\n- **Embla Carousel**: Touch-friendly carousel component","size_bytes":3827},"tailwind.config.ts":{"content":"module.exports = {\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\",\n    \"./src/**/*.{html,js,ts,jsx,tsx}\",\n    \"app/**/*.{ts,tsx}\",\n    \"components/**/*.{ts,tsx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        \"app-secondary\": \"var(--app-secondary)\",\n        \"dark-mode300\": \"var(--dark-mode300)\",\n        \"dark-mode400\": \"var(--dark-mode400)\",\n        \"dark-mode700\": \"var(--dark-mode700)\",\n        \"dark-mode900\": \"var(--dark-mode900)\",\n        \"dark-modedark-50\": \"var(--dark-modedark-50)\",\n        \"errorred-400\": \"var(--errorred-400)\",\n        \"main-2\": \"var(--main-2)\",\n        \"neutral-100\": \"var(--neutral-100)\",\n        \"neutral-200\": \"var(--neutral-200)\",\n        \"neutral-300\": \"var(--neutral-300)\",\n        \"neutral-400\": \"var(--neutral-400)\",\n        \"neutral-500\": \"var(--neutral-500)\",\n        \"neutral-600\": \"var(--neutral-600)\",\n        \"neutral-900\": \"var(--neutral-900)\",\n        \"secondary-100\": \"var(--secondary-100)\",\n        \"secondary-200\": \"var(--secondary-200)\",\n        \"secondary-300\": \"var(--secondary-300)\",\n        \"secondary-400\": \"var(--secondary-400)\",\n        \"secondary-50\": \"var(--secondary-50)\",\n        \"secondary-500\": \"var(--secondary-500)\",\n        \"secondary-900\": \"var(--secondary-900)\",\n        shadeswhite: \"var(--shadeswhite)\",\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      fontFamily: {\n        \"caption-regular\": \"var(--caption-regular-font-family)\",\n        \"display-01-semi-bold\": \"var(--display-01-semi-bold-font-family)\",\n        \"display-02-semi-bold\": \"var(--display-02-semi-bold-font-family)\",\n        \"heading-h1-semi-bold\": \"var(--heading-h1-semi-bold-font-family)\",\n        \"heading-h1-small-semi-bold\":\n          \"var(--heading-h1-small-semi-bold-font-family)\",\n        \"heading-h3-small-semi-bold\":\n          \"var(--heading-h3-small-semi-bold-font-family)\",\n        \"heading-h4-semi-bold\": \"var(--heading-h4-semi-bold-font-family)\",\n        \"heading-h5-semi-bold\": \"var(--heading-h5-semi-bold-font-family)\",\n        \"heading-h6-semi-bold\": \"var(--heading-h6-semi-bold-font-family)\",\n        \"heading-h6-small-semi-bold\":\n          \"var(--heading-h6-small-semi-bold-font-family)\",\n        \"paragraph-p1-regular\": \"var(--paragraph-p1-regular-font-family)\",\n        \"paragraph-p1-semi-bold\": \"var(--paragraph-p1-semi-bold-font-family)\",\n        \"paragraph-p2-regular\": \"var(--paragraph-p2-regular-font-family)\",\n        \"paragraph-p2-semi-bold\": \"var(--paragraph-p2-semi-bold-font-family)\",\n        \"paragraph-p3-regular\": \"var(--paragraph-p3-regular-font-family)\",\n        \"paragraph-p3-semi-bold\": \"var(--paragraph-p3-semi-bold-font-family)\",\n        \"subheading-regular\": \"var(--subheading-regular-font-family)\",\n        \"subheading-semi-bold\": \"var(--subheading-semi-bold-font-family)\",\n        sans: [\n          \"ui-sans-serif\",\n          \"system-ui\",\n          \"sans-serif\",\n          '\"Apple Color Emoji\"',\n          '\"Segoe UI Emoji\"',\n          '\"Segoe UI Symbol\"',\n          '\"Noto Color Emoji\"',\n        ],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n    container: { center: true, padding: \"2rem\", screens: { \"2xl\": \"1400px\" } },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n  darkMode: [\"class\"],\n};\n","size_bytes":4866},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});","size_bytes":1079},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n// --- 1. IMPORT 'path' ---\nimport path from \"path\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// --- 2. ADD THE STATIC MIDDLEWARE ---\n// This tells Express where to find static files like videos and images.\n// It needs to be defined early, before your routes.\nconst clientPublicPath = path.resolve(process.cwd(), \"client\", \"public\");\napp.use(express.static(clientPublicPath));\n\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    // --- 3. (Optional but good practice) REPLACE serveStatic ---\n    // Make sure your production static serving also points to the correct path\n    // This assumes your build output is in 'dist/public'\n    const buildOutputPath = path.resolve(process.cwd(), \"dist\", \"public\");\n    app.use(express.static(buildOutputPath));\n    app.get('*', (req, res) => {\n        res.sendFile(path.resolve(buildOutputPath, 'index.html'));\n    });\n  }\n  \n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();","size_bytes":2411},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\n\nimport { Desktop } from \"@/pages/Desktop\";\n\nfunction Router() {\n  return (\n    <Switch>\n      {/* Add pages below */}\n      <Route path=\"/\" component={Desktop} />\n      {/* Fallback to 404 */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":773},"client/src/index.css":{"content":"@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  .all-\\[unset\\] {\n    all: unset;\n  }\n}\n\n:root {\n  --app-secondary: rgba(171, 183, 194, 1);\n  --caption-regular-font-family: \"Sora\", Helvetica;\n  --caption-regular-font-size: 12px;\n  --caption-regular-font-style: normal;\n  --caption-regular-font-weight: 400;\n  --caption-regular-letter-spacing: 0px;\n  --caption-regular-line-height: 14px;\n  --dark-mode300: rgba(32, 36, 31, 1);\n  --dark-mode400: rgba(30, 33, 29, 1);\n  --dark-mode700: rgba(20, 23, 19, 1);\n  --dark-mode900: rgba(2, 6, 1, 1);\n  --dark-modedark-50: rgba(42, 46, 42, 1);\n  --display-01-semi-bold-font-family: \"Sora\", Helvetica;\n  --display-01-semi-bold-font-size: 72px;\n  --display-01-semi-bold-font-style: normal;\n  --display-01-semi-bold-font-weight: 600;\n  --display-01-semi-bold-letter-spacing: -2.88px;\n  --display-01-semi-bold-line-height: 80px;\n  --display-02-semi-bold-font-family: \"Sora\", Helvetica;\n  --display-02-semi-bold-font-size: 60px;\n  --display-02-semi-bold-font-style: normal;\n  --display-02-semi-bold-font-weight: 600;\n  --display-02-semi-bold-letter-spacing: -2.4px;\n  --display-02-semi-bold-line-height: 72px;\n  --errorred-400: rgba(248, 113, 113, 1);\n  --heading-h1-semi-bold-font-family: \"Sora\", Helvetica;\n  --heading-h1-semi-bold-font-size: 48px;\n  --heading-h1-semi-bold-font-style: normal;\n  --heading-h1-semi-bold-font-weight: 600;\n  --heading-h1-semi-bold-letter-spacing: -1.92px;\n  --heading-h1-semi-bold-line-height: 56px;\n  --heading-h1-small-semi-bold-font-family: \"Sora\", Helvetica;\n  --heading-h1-small-semi-bold-font-size: 34px;\n  --heading-h1-small-semi-bold-font-style: normal;\n  --heading-h1-small-semi-bold-font-weight: 600;\n  --heading-h1-small-semi-bold-letter-spacing: -1.36px;\n  --heading-h1-small-semi-bold-line-height: 40px;\n  --heading-h3-small-semi-bold-font-family: \"Sora\", Helvetica;\n  --heading-h3-small-semi-bold-font-size: 28px;\n  --heading-h3-small-semi-bold-font-style: normal;\n  --heading-h3-small-semi-bold-font-weight: 700;\n  --heading-h3-small-semi-bold-letter-spacing: -0.5600000000000002px;\n  --heading-h3-small-semi-bold-line-height: 34px;\n  --heading-h4-semi-bold-font-family: \"Sora\", Helvetica;\n  --heading-h4-semi-bold-font-size: 28px;\n  --heading-h4-semi-bold-font-style: normal;\n  --heading-h4-semi-bold-font-weight: 600;\n  --heading-h4-semi-bold-letter-spacing: -0.5600000000000002px;\n  --heading-h4-semi-bold-line-height: 34px;\n  --heading-h5-semi-bold-font-family: \"Sora\", Helvetica;\n  --heading-h5-semi-bold-font-size: 23px;\n  --heading-h5-semi-bold-font-style: normal;\n  --heading-h5-semi-bold-font-weight: 600;\n  --heading-h5-semi-bold-letter-spacing: -0.46px;\n  --heading-h5-semi-bold-line-height: 28px;\n  --heading-h6-semi-bold-font-family: \"Sora\", Helvetica;\n  --heading-h6-semi-bold-font-size: 19px;\n  --heading-h6-semi-bold-font-style: normal;\n  --heading-h6-semi-bold-font-weight: 600;\n  --heading-h6-semi-bold-letter-spacing: -0.38px;\n  --heading-h6-semi-bold-line-height: 23px;\n  --heading-h6-small-semi-bold-font-family: \"Sora\", Helvetica;\n  --heading-h6-small-semi-bold-font-size: 16px;\n  --heading-h6-small-semi-bold-font-style: normal;\n  --heading-h6-small-semi-bold-font-weight: 600;\n  --heading-h6-small-semi-bold-letter-spacing: -0.32px;\n  --heading-h6-small-semi-bold-line-height: 19px;\n  --main-2: rgba(73, 90, 255, 1);\n  --neutral-100: rgba(231, 234, 238, 1);\n  --neutral-200: rgba(208, 213, 221, 1);\n  --neutral-300: rgba(184, 192, 204, 1);\n  --neutral-400: rgba(160, 171, 187, 1);\n  --neutral-500: rgba(100, 116, 139, 1);\n  --neutral-600: rgba(75, 87, 104, 1);\n  --neutral-900: rgba(13, 15, 17, 1);\n  --paragraph-p1-regular-font-family: \"Inter\", Helvetica;\n  --paragraph-p1-regular-font-size: 14px;\n  --paragraph-p1-regular-font-style: normal;\n  --paragraph-p1-regular-font-weight: 400;\n  --paragraph-p1-regular-letter-spacing: 0px;\n  --paragraph-p1-regular-line-height: 17px;\n  --paragraph-p1-semi-bold-font-family: \"Sora\", Helvetica;\n  --paragraph-p1-semi-bold-font-size: 14px;\n  --paragraph-p1-semi-bold-font-style: normal;\n  --paragraph-p1-semi-bold-font-weight: 600;\n  --paragraph-p1-semi-bold-letter-spacing: 0px;\n  --paragraph-p1-semi-bold-line-height: 17px;\n  --paragraph-p2-regular-font-family: \"Sora\", Helvetica;\n  --paragraph-p2-regular-font-size: 16px;\n  --paragraph-p2-regular-font-style: normal;\n  --paragraph-p2-regular-font-weight: 400;\n  --paragraph-p2-regular-letter-spacing: 0px;\n  --paragraph-p2-regular-line-height: 19px;\n  --paragraph-p2-semi-bold-font-family: \"Sora\", Helvetica;\n  --paragraph-p2-semi-bold-font-size: 16px;\n  --paragraph-p2-semi-bold-font-style: normal;\n  --paragraph-p2-semi-bold-font-weight: 600;\n  --paragraph-p2-semi-bold-letter-spacing: 0px;\n  --paragraph-p2-semi-bold-line-height: 19px;\n  --paragraph-p3-regular-font-family: \"Sora\", Helvetica;\n  --paragraph-p3-regular-font-size: 18px;\n  --paragraph-p3-regular-font-style: normal;\n  --paragraph-p3-regular-font-weight: 400;\n  --paragraph-p3-regular-letter-spacing: 0px;\n  --paragraph-p3-regular-line-height: 21.600000381469727px;\n  --paragraph-p3-semi-bold-font-family: \"Sora\", Helvetica;\n  --paragraph-p3-semi-bold-font-size: 18px;\n  --paragraph-p3-semi-bold-font-style: normal;\n  --paragraph-p3-semi-bold-font-weight: 600;\n  --paragraph-p3-semi-bold-letter-spacing: 0px;\n  --paragraph-p3-semi-bold-line-height: 21.600000381469727px;\n  --secondary-100: rgba(225, 250, 235, 1);\n  --secondary-200: rgba(205, 246, 221, 1);\n  --secondary-300: rgba(176, 241, 201, 1);\n  --secondary-400: rgba(146, 235, 180, 1);\n  --secondary-50: rgba(245, 253, 248, 1);\n  --secondary-500: rgba(106, 228, 153, 1);\n  --secondary-900: rgba(10, 57, 28, 1);\n  --shadeswhite: rgba(255, 255, 255, 1);\n  --subheading-regular-font-family: \"Sora\", Helvetica;\n  --subheading-regular-font-size: 20px;\n  --subheading-regular-font-style: normal;\n  --subheading-regular-font-weight: 400;\n  --subheading-regular-letter-spacing: 0px;\n  --subheading-regular-line-height: 24px;\n  --subheading-semi-bold-font-family: \"Sora\", Helvetica;\n  --subheading-semi-bold-font-size: 20px;\n  --subheading-semi-bold-font-style: normal;\n  --subheading-semi-bold-font-weight: 600;\n  --subheading-semi-bold-letter-spacing: 0px;\n  --subheading-semi-bold-line-height: 24px;\n}\n\n:root {\n  --animate-spin: spin 1s linear infinite;\n}\n\n.animate-fade-in {\n  animation: fade-in 1s var(--animation-delay, 0s) ease forwards;\n}\n\n.animate-fade-up {\n  animation: fade-up 1s var(--animation-delay, 0s) ease forwards;\n}\n\n.animate-marquee {\n  animation: marquee var(--duration) infinite linear;\n}\n\n.animate-marquee-vertical {\n  animation: marquee-vertical var(--duration) linear infinite;\n}\n\n.animate-shimmer {\n  animation: shimmer 8s infinite;\n}\n\n.animate-spin {\n  animation: var(--animate-spin);\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(1turn);\n  }\n}\n\n@keyframes image-glow {\n  0% {\n    opacity: 0;\n    animation-timing-function: cubic-bezier(0.74, 0.25, 0.76, 1);\n  }\n\n  10% {\n    opacity: 0.7;\n    animation-timing-function: cubic-bezier(0.12, 0.01, 0.08, 0.99);\n  }\n\n  to {\n    opacity: 0.4;\n  }\n}\n\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fade-up {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes shimmer {\n  0%,\n  90%,\n  to {\n    background-position: calc(-100% - var(--shimmer-width)) 0;\n  }\n\n  30%,\n  60% {\n    background-position: calc(100% + var(--shimmer-width)) 0;\n  }\n}\n\n@keyframes marquee {\n  0% {\n    transform: translate(0);\n  }\n\n  to {\n    transform: translateX(calc(-100% - var(--gap)));\n  }\n}\n\n@keyframes marquee-vertical {\n  0% {\n    transform: translateY(0);\n  }\n\n  to {\n    transform: translateY(calc(-100% - var(--gap)));\n  }\n}\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 47.4% 11.2%;\n\n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 47.4% 11.2%;\n\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n\n    --card: transparent;\n    --card-foreground: 222.2 47.4% 11.2%;\n\n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n\n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n\n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n\n    --destructive: 0 100% 50%;\n    --destructive-foreground: 210 40% 98%;\n\n    --ring: 215 20.2% 65.1%;\n\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 224 71% 4%;\n    --foreground: 213 31% 91%;\n\n    --muted: 223 47% 11%;\n    --muted-foreground: 215.4 16.3% 56.9%;\n\n    --accent: 216 34% 17%;\n    --accent-foreground: 210 40% 98%;\n\n    --popover: 224 71% 4%;\n    --popover-foreground: 215 20.2% 65.1%;\n\n    --border: 216 34% 17%;\n    --input: 216 34% 17%;\n\n    --card: transparent;\n    --card-foreground: 213 31% 91%;\n\n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 1.2%;\n\n    --secondary: 222.2 47.4% 11.2%;\n    --secondary-foreground: 210 40% 98%;\n\n    --destructive: 0 63% 31%;\n    --destructive-foreground: 210 40% 98%;\n\n    --ring: 216 34% 17%;\n\n    --radius: 0.5rem;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground;\n    font-feature-settings: \"rlig\" 1, \"calt\" 1;\n  }\n}\n\n/* Custom positioning adjustments */\ndiv#carousel-container {\n    position: relative;\n    top: 60px;\n}\n\ndiv#clients-results-cta-section {\n    position: relative;\n    top: 97px;\n}\n\n.flex.flex-col.items-center.justify-center.gap-4.p-6.relative.w-full.rounded-2xl.border.border-solid.border-\\[\\#6ae49933\\].backdrop-blur-\\[7\\.5px\\].backdrop-brightness-\\[100\\%\\].\\[-webkit-backdrop-filter\\:blur\\(7\\.5px\\)_brightness\\(100\\%\\)\\] {\n    height: 200px;\n}\n\n/* What We Do section - Cards with background images at 30% opacity */\n#section-what-we-do .has-background-image::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--bg-image) 50% 50% / cover;\n    opacity: 0.3;\n    border-radius: inherit;\n    z-index: -1;\n}\n\n/* Services section - z-index and positioning */\ndiv#services-bg-frame-0 {\n    z-index: 1;\n}\n\ndiv#service-card-3 {\n    position: relative;\n    top: 50px;\n}\n\ndiv#service-card-2 {\n    position: relative;\n    top: 50px;\n}\n\n","size_bytes":10404},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/Desktop.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ClientsResultsSection } from \"./sections/ClientsResultsSection\";\nimport { ContactSection } from \"./sections/ContactSection\";\nimport { ContentSection } from \"./sections/ContentSection\";\nimport { DataTableSection } from \"./sections/DataTableSection\";\nimport { FeatureSection } from \"./sections/FeatureSection\";\nimport { FooterSection } from \"./sections/FooterSection\";\nimport { GallerySection } from \"./sections/GallerySection\";\nimport { HeroSection } from \"./sections/HeroSection\";\nimport { InfoWrapperSection } from \"./sections/InfoWrapperSection\";\nimport { MainContentSection } from \"./sections/MainContentSection\";\nimport { NodeSection } from \"./sections/NodeSection\";\nimport { OverviewSection } from \"./sections/OverviewSection\";\nimport { ServicesSection } from \"./sections/ServicesSection\";\nimport { StatisticsSection } from \"./sections/StatisticsSection\";\nimport { TestimonialsSection } from \"./sections/TestimonialsSection\";\nimport { WhatWeDoSection } from \"./sections/WhatWeDoSection\";\nimport { WhyChooseUsSection } from \"./sections/WhyChooseUsSection\";\n\nconst navigationItems = [\n  { label: \"Services\", sectionId: \"section-services\" },\n  { label: \"ROI Calculator\", sectionId: \"roi-calculator-section\" },\n  { label: \"Case Studies\", sectionId: \"section-case-studies\" },\n  { label: \"Team\", sectionId: \"section-team\" },\n  { label: \"Contact\", sectionId: \"section-contact\" },\n];\n\nconst brandLogos = [\n  {\n    width: \"w-[289.13px]\",\n    height: \"h-[60px]\",\n    backgroundImage:\n      \"bg-[url(/figmaAssets/2fe3278a-ce58-4000-b160-a7415574aac1.png)]\",\n  },\n  {\n    width: \"w-[168px]\",\n    height: \"h-[60px]\",\n    backgroundImage: \"bg-[url(/figmaAssets/squadio-logo-2.png)]\",\n  },\n  {\n    width: \"w-[124px]\",\n    height: \"h-[60.06px]\",\n    backgroundImage:\n      \"bg-[url(/figmaAssets/b6b89180-4d95-4361-ac5a-0a68e0db06c0.svg)]\",\n  },\n  {\n    width: \"w-[72px]\",\n    height: \"h-[60.23px]\",\n    backgroundImage:\n      \"bg-[url(/figmaAssets/vitrine-furniture-09082019-ee834ce7-e8ea-4e00-878d-60378a796ff0-.png)]\",\n  },\n  {\n    width: \"w-[90px]\",\n    height: \"h-[72px]\",\n    backgroundImage:\n      \"bg-[url(/figmaAssets/el-kalb-el-4a2y---white-and-no-background.png)]\",\n  },\n  {\n    width: \"w-[83.44px]\",\n    height: \"h-[72.26px]\",\n    backgroundImage: \"bg-[url(/figmaAssets/regal-en-logo-01.png)]\",\n  },\n];\n\nexport const Desktop = (): JSX.Element => {\n  return (\n    <div id=\"main-container\" className=\"bg-dark-mode900 overflow-hidden w-full min-w-[1440px] relative\">\n      <header id=\"header-navigation\" className=\"flex w-[1376px] h-[76px] items-center justify-between px-8 py-4 flex-nowrap fixed top-3 left-[calc(50.00%_-_688px)] bg-[#ffffff1a] rounded overflow-hidden border-[none] backdrop-blur-[23.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(23.5px)_brightness(100%)] z-[100] before:content-[''] before:absolute before:inset-0 before:p-px before:rounded before:[background:linear-gradient(180deg,rgba(255,255,255,0.03)_0%,rgba(10,57,28,0.3)_100%)] before:[-webkit-mask:linear-gradient(#fff_0_0)_content-box,linear-gradient(#fff_0_0)] before:[-webkit-mask-composite:xor] before:[mask-composite:exclude] before:z-[1] before:pointer-events-none\">\n        <img\n          id=\"logo-main\"\n          className=\"relative w-[119px] h-[22px]\"\n          alt=\"Frame\"\n          src=\"/figmaAssets/frame-2131328421.svg\"\n        />\n\n        <nav id=\"main-navigation\" className=\"inline-flex items-start gap-4 relative flex-[0_0_auto]\">\n          {navigationItems.map((item, index) => (\n            <div\n              key={index}\n              id={`nav-item-${item.label.toLowerCase().replace(/\\s+/g, '-')}`}\n              className=\"relative w-fit mt-[-1.00px] font-normal text-shadeswhite text-[14px] tracking-[0px] leading-[17px] whitespace-nowrap cursor-pointer hover:opacity-80\"\n              onClick={() => {\n                document.getElementById(item.sectionId)?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n              }}\n            >\n              {item.label}\n            </div>\n          ))}\n        </nav>\n\n        <div id=\"header-actions\" className=\"inline-flex items-center justify-end gap-5 relative flex-[0_0_auto]\">\n          <div id=\"language-selector\" className=\"inline-flex items-center justify-center gap-1 relative flex-[0_0_auto] cursor-pointer\">\n            <img\n              id=\"lang-flag-icon\"\n              className=\"relative w-6 h-6\"\n              alt=\"En svg\"\n              src=\"/figmaAssets/en-svg.svg\"\n            />\n\n            <img\n              id=\"lang-dropdown-arrow\"\n              className=\"relative w-4 h-4\"\n              alt=\"Outline arrows alt\"\n              src=\"/figmaAssets/outline---arrows---alt-arrow-right.svg\"\n            />\n          </div>\n\n          <Button \n            id=\"button-free-audit\" \n            className=\"px-4 py-2 relative flex-[0_0_auto] bg-secondary-500 inline-flex items-center justify-center gap-2 rounded h-auto hover:bg-secondary-500\"\n            onClick={() => {\n              document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n            }}\n          >\n            <div className=\"font-semibold text-neutral-900 text-[14px] leading-[17px] whitespace-nowrap relative w-fit mt-[-1.00px] tracking-[0px]\">\n              Get Free Audit\n            </div>\n          </Button>\n        </div>\n      </header>\n\n      <HeroSection />\n\n\n\n      <section id=\"section-brand-logos\" className=\"flex flex-col w-[1144px] items-start justify-center p-[9px] relative mx-auto mt-[157px] mb-[160px] bg-[#ffffff03] rounded-3xl overflow-hidden border border-solid border-[#6ae49933] shadow-[inset_0px_0px_0px_9px_#ffffff08]\">\n        <div id=\"brand-logos-container\" className=\"flex flex-col items-center justify-center gap-6 px-5 py-6 relative self-stretch w-full flex-[0_0_auto] rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(0,0,0,0.5)_0%,rgba(0,0,0,0.5)_100%)]\">\n          <h2 id=\"brand-logos-title\" className=\"relative self-stretch mt-[-1.00px] font-semibold text-shadeswhite text-[23px] text-center tracking-[-0.46px] leading-[28px]\">\n            Trusted by Leading GCC &amp; MENA Brands\n          </h2>\n\n          <div id=\"brand-logos-list\" className=\"inline-flex items-center gap-10 relative flex-[0_0_auto]\">\n            {brandLogos.map((logo, index) => (\n              <div\n                key={index}\n                id={`brand-logo-${index + 1}`}\n                className={`relative ${logo.width} ${logo.height} ${logo.backgroundImage} bg-cover bg-[50%_50%] grayscale hover:grayscale-0 transition-all duration-300`}\n              />\n            ))}\n          </div>\n\n          <img\n            id=\"brand-logos-top-decoration\"\n            className=\"absolute top-0 right-[57px] w-[180px] h-2\"\n            alt=\"Mask group\"\n            src=\"/figmaAssets/mask-group-67.svg\"\n          />\n\n          <img\n            id=\"brand-logos-bottom-decoration\"\n            className=\"absolute left-[57px] bottom-[-7px] w-[180px] h-2\"\n            alt=\"Mask group\"\n            src=\"/figmaAssets/mask-group-69.svg\"\n          />\n        </div>\n      </section>\n\n      <div id=\"main-content-sections\" className=\"flex flex-col w-full items-start relative\">\n        <ClientsResultsSection />\n        <ServicesSection />\n        <WhyChooseUsSection />\n        <WhatWeDoSection />\n        <DataTableSection />\n        <OverviewSection />\n        <FeatureSection />\n        <InfoWrapperSection />\n        <MainContentSection />\n        <ContentSection />\n        <NodeSection />\n        <StatisticsSection />\n        <TestimonialsSection />\n        <GallerySection />\n        <ContactSection />\n        <FooterSection />\n      </div>\n    </div>\n  );\n};\n","size_bytes":7988},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as AccordionPrimitive from \"@radix-ui/react-accordion\";\nimport { ChevronDownIcon } from \"lucide-react\";\nimport * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Accordion = AccordionPrimitive.Root;\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n));\nAccordionItem.displayName = \"AccordionItem\";\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex w-full\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDownIcon className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n));\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n));\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\n","size_bytes":2032},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import { type VariantProps, cva } from \"class-variance-authority\";\nimport * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","size_bytes":1150},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","size_bytes":1918},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","size_bytes":1860},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","size_bytes":779},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\";\n\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\";\nimport * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDownIcon className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUpIcon className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDownIcon className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\",\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n","size_bytes":5692},"client/src/components/ui/separator.tsx":{"content":"import * as SeparatorPrimitive from \"@radix-ui/react-separator\";\nimport * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref,\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nSeparator.displayName = SeparatorPrimitive.Root.displayName;\n\nexport { Separator };\n","size_bytes":768},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as SliderPrimitive from \"@radix-ui/react-slider\";\nimport * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className,\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n));\nSlider.displayName = SliderPrimitive.Root.displayName;\n\nexport { Slider };\n","size_bytes":1047},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = \"Table\";\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n));\nTableHeader.displayName = \"TableHeader\";\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n));\nTableBody.displayName = \"TableBody\";\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = \"TableFooter\";\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = \"TableRow\";\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = \"TableHead\";\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableCell.displayName = \"TableCell\";\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nTableCaption.displayName = \"TableCaption\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n","size_bytes":2885},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/sections/ClientsResultsSection.tsx":{"content":"import React, { useState, useEffect } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\nconst clientsData = [\n  {\n    id: 1,\n    name: \"Dubai Phone\",\n    industry: \"Electronics\",\n    description:\n      \"Leading mobile phone retailer providing the latest smartphones, accessories, and digital solutions.\",\n    market: \"Egypt Market\",\n    profileImage: \"/figmaAssets/profile-photo-11.svg\",\n    flagImage: \"/figmaAssets/egypt-1.svg\",\n    goal: \"Improve mobile checkout experience.\",\n    improvements: \"Mobile optimization, payment flow.\",\n    results: [\n      { percentage: \"+65%\", metric: \"Mobile conversion rate\" },\n      { percentage: \"+28%\", metric: \"Customer retention\" },\n    ],\n    maskImage1: \"/figmaAssets/mask-group-10.svg\",\n    maskImage2: \"/figmaAssets/mask-group.svg\",\n    opacity: \"opacity-40\",\n    blur: \"blur-sm\",\n    position: \"left-[calc(50.00%_+_504px)]\",\n  },\n  {\n    id: 2,\n    name: \"Squadio\",\n    industry: \"Technology\",\n    description:\n      \"Technology solutions provider in Saudi Arabia offering innovative software development.\",\n    market: \"Saudi Market\",\n    profileImage: \"/figmaAssets/profile-photo-5.svg\",\n    flagImage: \"/figmaAssets/saudi-arabia-1.svg\",\n    goal: \"Increase lead generation and conversions.\",\n    improvements: \"Landing pages, contact forms.\",\n    results: [\n      { percentage: \"+833%\", metric: \"Signup Rate\" },\n      { percentage: \"+44.02%\", metric: \"Funnel Progression\" },\n    ],\n    maskImage1: \"/figmaAssets/mask-group-64.svg\",\n    maskImage2: \"/figmaAssets/mask-group-60.svg\",\n    opacity: \"opacity-40\",\n    blur: \"blur-sm\",\n    position: \"right-[1390px]\",\n  },\n  {\n    id: 3,\n    name: \"Vitrine Furniture\",\n    industry: \"Furniture\",\n    description:\n      \"Leading furniture retailer in Egypt providing modern and contemporary furniture solutions.\",\n    market: \"Egypt Market\",\n    profileImage: \"/figmaAssets/profile-photo-1.svg\",\n    flagImage: \"/figmaAssets/egypt.svg\",\n    goal: \"Increase conversion to partner products.\",\n    improvements: \"Product comparison pages.\",\n    results: [\n      { percentage: \"+64.5%\", metric: \"E-commerce conversion rate\" },\n      { percentage: \"+19.48%\", metric: \"Average order value\" },\n    ],\n    maskImage1: \"/figmaAssets/mask-group-65.svg\",\n    maskImage2: \"/figmaAssets/mask-group-62.svg\",\n    opacity: \"opacity-60\",\n    blur: \"\",\n    position: \"left-[calc(50.00%_+_236px)]\",\n  },\n  {\n    id: 4,\n    name: \"Regal Honey\",\n    industry: \"Food & Beverage\",\n    description:\n      \"Premium honey retailer offering natural and organic honey products across Kuwait.\",\n    market: \"Kuwait Market\",\n    profileImage: \"/figmaAssets/profile-photo-7.svg\",\n    flagImage: \"/figmaAssets/kuwait-1.svg\",\n    goal: \"ECR uplift across all product categories.\",\n    improvements: \"Homepage, product details page.\",\n    results: [\n      { percentage: \"+44.15%\", metric: \"E-commerce conversion rate\" },\n      { percentage: \"+34.6%\", metric: \"Average order value\" },\n    ],\n    maskImage1: \"/figmaAssets/mask-group-1.svg\",\n    maskImage2: \"/figmaAssets/mask-group-5.svg\",\n    opacity: \"\",\n    blur: \"\",\n    position: \"left-[calc(50.00%_-_240px)]\",\n  },\n  {\n    id: 5,\n    name: \"Ribal Magic\",\n    industry: \"Entertainment\",\n    description:\n      \"Entertainment and events company in Saudi Arabia specializing in magical performances.\",\n    market: \"Saudi Market\",\n    profileImage: \"/figmaAssets/profile-photo.svg\",\n    flagImage: \"/figmaAssets/saudi-arabia.svg\",\n    goal: \"Reduce cart abandonment & increase AOV.\",\n    improvements: \"Checkout flow, product pages.\",\n    results: [\n      { percentage: \"+11.9%\", metric: \"E-commerce conversion rate\" },\n      { percentage: \"+5.99%\", metric: \"Average order value\" },\n    ],\n    maskImage1: \"/figmaAssets/mask-group-63.svg\",\n    maskImage2: \"/figmaAssets/mask-group-66.svg\",\n    opacity: \"opacity-60\",\n    blur: \"\",\n    position: \"right-[1122px]\",\n  },\n];\n\nexport const ClientsResultsSection: React.FC = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState(0);\n  const [dragDistance, setDragDistance] = useState(0);\n\n  // Auto-advance carousel\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isDragging) {\n        setCurrentIndex((prev) => prev + 1);\n      }\n    }, 4000); // Change slide every 4 seconds\n\n    return () => clearInterval(interval);\n  }, [isDragging]);\n\n  const nextSlide = () => {\n    setCurrentIndex((prev) => prev + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrentIndex((prev) => prev - 1);\n  };\n\n  const goToSlide = (index: number) => {\n    setCurrentIndex(index);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent, cardIndex: number) => {\n    // Only allow dragging on the center card\n    if (cardIndex !== currentIndex) return;\n    setIsDragging(true);\n    setDragStart(e.clientX);\n    setDragDistance(0);\n  };\n\n  const handleMouseMove = (e: React.MouseEvent, cardIndex: number) => {\n    // Only allow dragging on the center card\n    if (!isDragging || cardIndex !== currentIndex) return;\n    const distance = e.clientX - dragStart;\n    setDragDistance(distance);\n  };\n\n  const handleMouseUp = (cardIndex: number) => {\n    // Only allow dragging on the center card\n    if (!isDragging || cardIndex !== currentIndex) return;\n    \n    const threshold = 80;\n    if (Math.abs(dragDistance) > threshold) {\n      if (dragDistance > 0) {\n        prevSlide();\n      } else {\n        nextSlide();\n      }\n    }\n    \n    setIsDragging(false);\n    setDragDistance(0);\n  };\n\n  const handleMouseLeave = (cardIndex: number) => {\n    // Only allow dragging on the center card\n    if (cardIndex !== currentIndex) return;\n    setIsDragging(false);\n    setDragDistance(0);\n  };\n\n  return (\n    <section id=\"section-clients-results\" className=\"w-full bg-dark-mode900 overflow-hidden pt-0 pb-[200px]\">\n      <div id=\"clients-results-header\" className=\"flex flex-col items-center gap-[60px] mb-[60px] px-4\">\n        <h1 id=\"clients-results-title\" className=\"font-semibold text-shadeswhite text-[48px] text-center tracking-[-1.92px] leading-[56px]\">\n          TOP CLIENTS & RESULTS\n        </h1>\n        <p id=\"clients-results-description\" className=\"max-w-[770px] font-semibold text-shadeswhite text-[20px] text-center tracking-[0px] leading-[24px]\">\n          See how we&apos;ve helped leading e-commerce brands increase\n          conversions, revenue, and customer loyalty through CRO.\n        </p>\n      </div>\n\n      <div id=\"carousel-container\" className=\"relative px-4 mb-[60px] max-w-7xl mx-auto\">\n        {/* Stacked Carousel Content */}\n        <div id=\"carousel-wrapper\" className=\"relative h-[600px] flex items-center justify-center\">\n          {/* Render cards around current index for infinite effect */}\n          {[-2, -1, 0, 1, 2].map((offset) => {\n            const cardIndex = currentIndex + offset;\n            const clientIndex = ((cardIndex % clientsData.length) + clientsData.length) % clientsData.length;\n            const client = clientsData[clientIndex];\n            const position = offset;\n            const isCenter = position === 0;\n            const isVisible = Math.abs(position) <= 2;\n            \n            if (!isVisible) return null;\n            \n            return (\n              <Card\n                key={client.id}\n                id={`client-card-${client.id}`}\n                onClick={() => !isCenter && !isDragging && goToSlide(cardIndex)}\n                onMouseDown={(e) => handleMouseDown(e, cardIndex)}\n                onMouseMove={(e) => handleMouseMove(e, cardIndex)}\n                onMouseUp={() => handleMouseUp(cardIndex)}\n                onMouseLeave={() => handleMouseLeave(cardIndex)}\n                className={`absolute w-[400px] bg-[#6ae4990f] rounded-3xl border border-solid border-[#ffffff1a] overflow-hidden transition-all duration-700 ease-in-out select-none ${\n                  isCenter \n                    ? 'scale-100 opacity-100 cursor-grab active:cursor-grabbing' \n                    : Math.abs(position) === 1 \n                      ? 'scale-90 opacity-60 cursor-pointer' \n                      : 'scale-80 opacity-30 cursor-pointer'\n                } ${isDragging ? 'transition-none' : ''}`}\n                style={{\n                  transform: `translateX(${(position * 280) + (isDragging ? dragDistance : 0)}px) scale(${\n                    isCenter ? 1 : Math.abs(position) === 1 ? 0.9 : 0.8\n                  })`,\n                  zIndex: isCenter ? 50 : Math.abs(position) === 1 ? 40 : 30\n                }}\n                data-testid={`card-client-${client.id}`}\n              >\n            <CardContent id={`card-content-${client.id}`} className=\"p-3\">\n              <div id={`card-inner-content-${client.id}`} className=\"flex flex-col items-start justify-center gap-5 px-6 py-8 rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] bg-[linear-gradient(0deg,rgba(0,0,0,0.3)_0%,rgba(0,0,0,0.3)_100%),radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)]\">\n                <div id={`client-profile-section-${client.id}`} className=\"flex flex-col h-[284px] items-center justify-center gap-6 p-6 w-full rounded-xl overflow-hidden border-[none] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] bg-[linear-gradient(180deg,rgba(176,241,201,0.3)_0%,rgba(6,35,17,1)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)] before:content-[''] before:absolute before:inset-0 before:p-px before:rounded-xl before:[background:linear-gradient(180deg,rgba(255,255,255,0.2)_0%,rgba(59,126,85,0)_100%)] before:[-webkit-mask:linear-gradient(#fff_0_0)_content-box,linear-gradient(#fff_0_0)] before:[-webkit-mask-composite:xor] before:[mask-composite:exclude] before:z-[1] before:pointer-events-none relative\">\n                  <div id={`client-header-${client.id}`} className=\"flex items-center gap-4 w-full\">\n                    <img\n                      id={`client-profile-image-${client.id}`}\n                      className=\"w-20 h-20 object-cover rounded-full\"\n                      alt=\"Profile photo\"\n                      src={client.profileImage}\n                    />\n                    <div id={`client-info-${client.id}`} className=\"flex flex-col items-start gap-3 flex-1\">\n                      <h3 id={`client-name-${client.id}`} className=\"font-semibold text-shadeswhite text-[28px] tracking-[-0.56px] leading-[34px]\">\n                        {client.name}\n                      </h3>\n                      <Badge id={`client-industry-badge-${client.id}`} className=\"bg-[#6ae49926] text-secondary-300 border-none px-3 py-1.5 rounded-[100px]\">\n                        <span id={`client-industry-text-${client.id}`} className=\"font-normal text-[14px] tracking-[0px] leading-[17px]\">\n                          {client.industry}\n                        </span>\n                      </Badge>\n                    </div>\n                  </div>\n\n                  <div id={`client-description-section-${client.id}`} className=\"flex flex-col gap-5 w-full\">\n                    <p id={`client-description-${client.id}`} className=\"font-normal text-shadeswhite text-[20px] tracking-[0px] leading-[24px]\">\n                      {client.description}\n                    </p>\n                    <div id={`client-market-info-${client.id}`} className=\"flex items-center gap-2\">\n                      <img\n                        id={`client-flag-${client.id}`}\n                        className=\"w-10 h-10\"\n                        alt=\"Country flag\"\n                        src={client.flagImage}\n                      />\n                      <span id={`client-market-${client.id}`} className=\"font-semibold text-shadeswhite text-[18px] tracking-[0px] leading-[21.6px]\">\n                        {client.market}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div id={`client-details-cards-${client.id}`} className=\"flex flex-col gap-3 w-full\">\n                  <Card id={`client-goal-card-${client.id}`} className=\"bg-transparent border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)]\">\n                    <CardContent id={`client-goal-content-${client.id}`} className=\"flex flex-col items-start justify-center gap-3 p-6\">\n                      <h4 id={`client-goal-title-${client.id}`} className=\"font-semibold text-shadeswhite text-[20px] tracking-[0px] leading-[24px]\">\n                        Our Goal:\n                      </h4>\n                      <p id={`client-goal-text-${client.id}`} className=\"font-normal text-shadeswhite text-[16px] tracking-[0px] leading-[19px] text-left\">\n                        {client.goal}\n                      </p>\n                    </CardContent>\n                  </Card>\n\n                  <Card id={`client-improvements-card-${client.id}`} className=\"bg-transparent border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)]\">\n                    <CardContent id={`client-improvements-content-${client.id}`} className=\"flex flex-col items-start justify-center gap-3 p-6\">\n                      <h4 id={`client-improvements-title-${client.id}`} className=\"font-semibold text-shadeswhite text-[20px] tracking-[0px] leading-[24px]\">\n                        Areas of Improvement:\n                      </h4>\n                      <p id={`client-improvements-text-${client.id}`} className=\"font-normal text-shadeswhite text-[16px] tracking-[0px] leading-[19px] text-left\">\n                        {client.improvements}\n                      </p>\n                    </CardContent>\n                  </Card>\n\n                  <Card id={`client-results-card-${client.id}`} className=\"bg-transparent border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)]\">\n                    <CardContent id={`client-results-content-${client.id}`} className=\"flex flex-col items-start justify-center gap-3 p-6\">\n                      <h4 id={`client-results-title-${client.id}`} className=\"font-semibold text-shadeswhite text-[20px] tracking-[0px] leading-[24px]\">\n                        Results:\n                      </h4>\n                      <div id={`client-results-list-${client.id}`} className=\"flex flex-col gap-2 w-full\">\n                        {client.results.map((result, index) => (\n                          <div\n                            key={index}\n                            id={`client-result-item-${client.id}-${index}`}\n                            className=\"[font-family:'Sora',Helvetica] font-normal text-shadeswhite text-lg tracking-[0] leading-[18px]\"\n                          >\n                            <span id={`client-result-percentage-${client.id}-${index}`} className=\"font-semibold text-[#6ae499] text-[18px] tracking-[0px] leading-[21.6px]\">\n                              {result.percentage}\n                            </span>\n                            <span className=\"text-white leading-[21.6px]\">\n                              &nbsp;&nbsp;\n                            </span>\n                            <span id={`client-result-metric-${client.id}-${index}`} className=\"text-white font-normal text-[16px] tracking-[0px] leading-[19px]\">\n                              {result.metric}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n\n              <img\n                id={`client-mask-image-1-${client.id}`}\n                className=\"absolute top-0 right-3 w-[308px] h-2\"\n                alt=\"Mask group\"\n                src={client.maskImage1}\n              />\n              <img\n                id={`client-mask-image-2-${client.id}`}\n                className=\"absolute top-[-1274px] right-[6271px] w-[308px] h-2\"\n                alt=\"Mask group\"\n                src={client.maskImage2}\n              />\n            </CardContent>\n          </Card>\n        );\n          })}\n        </div>\n      </div>\n\n      <div id=\"clients-results-cta-section\" className=\"flex flex-col items-center justify-center gap-8 px-4\">\n        <h2 id=\"clients-results-cta-title\" className=\"font-semibold text-white text-[20px] text-center tracking-[0px] leading-[24px]\">\n          Ready to be our next success story?\n        </h2>\n        <Button \n          id=\"clients-results-cta-button\" \n          className=\"h-auto bg-secondary-500 text-neutral-900 px-5 py-3.5 rounded hover:bg-secondary-500\"\n          onClick={() => {\n            document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n          }}\n        >\n          <span id=\"clients-results-cta-button-text\" className=\"font-semibold text-[18px] tracking-[0px] leading-[21.6px]\">\n            Book Your Free Consultation\n          </span>\n        </Button>\n      </div>\n    </section>\n  );\n};\n","size_bytes":18118},"client/src/pages/sections/ContactSection.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport const ContactSection = (): JSX.Element => {\n  const stripeElements = Array.from({ length: 36 }, (_, index) => index);\n\n  return (\n    <section id=\"section-contact\" className=\"relative w-full h-[390px] bg-dark-mode700\">\n      <div id=\"contact-background-stripes\" className=\"flex h-[390px] items-center absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-dark-mode700\">\n        {stripeElements.map((index) => (\n          <div\n            key={index}\n            id={`contact-stripe-${index}`}\n            className=\"relative h-full w-10 backdrop-blur-[17.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(17.5px)_brightness(100%)] bg-[linear-gradient(270deg,rgba(255,255,255,0.03)_0%,rgba(255,255,255,0.1)_100%)]\"\n          />\n        ))}\n      </div>\n\n      <div id=\"contact-content\" className=\"flex flex-col items-center justify-center gap-8 absolute top-[72px] left-1/2 transform -translate-x-1/2 rounded-xl\">\n        <h2 id=\"contact-title\" className=\"w-fit mt-[-1.00px] text-white text-[60px] font-semibold text-center tracking-[0px] leading-[1.2] whitespace-nowrap\">\n          Be Our Next Success Story\n        </h2>\n\n        <p id=\"contact-description\" className=\"w-[806px] text-white text-[20px] font-normal text-center tracking-[0px] leading-[1.5]\">\n          Real GCC brands. Real results.\n          <br /> See how we&apos;ve helped e-commerce stores like yours boost\n          conversions, lower costs, and unlock hidden revenue.\n        </p>\n\n        <Button \n          id=\"contact-cta-button\" \n          className=\"flex items-center justify-center gap-2 px-5 py-3.5 bg-secondary-500 rounded h-auto hover:bg-secondary-500\"\n          onClick={() => {\n            document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n          }}\n        >\n          <span id=\"contact-cta-button-text\" className=\"w-fit mt-[-1.00px] text-neutral-900 text-[18px] font-semibold tracking-[0px] leading-[1.2] whitespace-nowrap\">\n            Let&apos;s Write Your Success Story\n          </span>\n        </Button>\n      </div>\n    </section>\n  );\n};\n","size_bytes":2211},"client/src/pages/sections/ContentSection.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport const ContentSection = (): JSX.Element => {\n  const gradientBars = Array.from({ length: 12 }, (_, index) => index);\n\n  return (\n    <section id=\"section-learn-cro\" className=\"flex flex-col items-start gap-2 px-0 py-[100px] relative self-stretch w-full flex-[0_0_auto]\">\n      <div className=\"flex items-center gap-[13px] relative self-stretch w-full flex-[0_0_auto] bg-dark-mode700\">\n        <div className=\"inline-flex h-[681px] items-center relative flex-[0_0_auto] bg-dark-mode700\">\n          {gradientBars.map((index) => (\n            <div\n              key={`gradient-bar-${index}`}\n              className=\"relative self-stretch w-10 backdrop-blur-[17.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(17.5px)_brightness(100%)] bg-[linear-gradient(270deg,rgba(255,255,255,0.03)_0%,rgba(255,255,255,0.1)_100%)]\"\n            />\n          ))}\n        </div>\n\n        <img\n          className=\"relative flex-[0_0_auto]\"\n          alt=\"Overlay border\"\n          src=\"/figmaAssets/overlay-border-shadow.svg\"\n        />\n\n        <div className=\"flex w-96 items-start absolute top-20 left-[calc(50.00%_-_688px)] flex-col gap-6\">\n          <h1 className=\"relative self-stretch mt-[-1.00px] text-shadeswhite text-[48px] font-semibold tracking-[-1.92px] leading-[56px]\">\n            Learn CRO From Our CEO\n          </h1>\n\n          <p className=\"relative self-stretch text-shadeswhite text-[20px] font-semibold tracking-[0px] leading-6\">\n            Get insider insights into the strategies that have generated\n            millions in additional revenue for Gulf-based e-commerce brands.\n          </p>\n\n          <Button\n            variant=\"outline\"\n            className=\"px-5 py-3.5 relative flex-[0_0_auto] border border-solid border-[#6ae499] inline-flex items-center justify-center gap-2 rounded bg-transparent h-auto hover:bg-transparent hover:text-secondary-500\"\n            asChild\n          >\n            <a\n              href=\"https://www.youtube.com/watch?v=8zECN_jyCG4\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"font-normal text-secondary-500 text-lg leading-[18px] relative w-fit mt-[-1.00px] [font-family:'Sora',Helvetica] tracking-[0]\"\n            >\n              <span className=\"text-[18px] font-semibold leading-[21.6px] underline tracking-[0px]\">\n                Watch Now\n              </span>\n            </a>\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n};\n","size_bytes":2549},"client/src/pages/sections/DataTableSection.tsx":{"content":"\"use client\";\n\nimport { CheckIcon, XIcon } from \"lucide-react\";\nimport React from \"react\";\nimport { motion, useScroll, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nexport const DataTableSection = (): JSX.Element => {\n  const gridItems = Array.from({ length: 234 }, (_, index) => index);\n  // This ref is now specifically for the table container\n  const tableContainerRef = useRef(null); \n  const { scrollYProgress } = useScroll({\n    target: tableContainerRef,\n    // This offset directly maps scroll progress to the element's visibility percentage\n    offset: [\"start end\", \"end end\"], \n  });\n\n  const tableData = [\n    {\n      feature: \"Revenue Growth Without More Ad Spend\",\n      runningAds: false,\n      websiteRedesign: false,\n      conversionOptimization: true,\n    },\n    {\n      feature: \"Low Risk / Data-Driven Decisions\",\n      runningAds: false,\n      websiteRedesign: false,\n      conversionOptimization: true,\n    },\n    {\n      feature: \"Fast, Sustainable Results\",\n      runningAds: false,\n      websiteRedesign: false,\n      conversionOptimization: true,\n    },\n    {\n      feature: \"Improves All Marketing Channels\",\n      runningAds: false,\n      websiteRedesign: false,\n      conversionOptimization: true,\n    },\n    {\n      feature: \"Cost Efficiency / Higher ROI\",\n      runningAds: false,\n      websiteRedesign: false,\n      conversionOptimization: true,\n    },\n    {\n      feature: \"Ongoing Improvements (Not One-Off)\",\n      runningAds: false,\n      websiteRedesign: false,\n      conversionOptimization: true,\n    },\n  ];\n\n  return (\n    <section className=\"relative w-full min-h-[790px] bg-dark-mode900 overflow-hidden\">\n      <div className=\"flex flex-wrap w-full items-center gap-0 absolute top-0 left-0\">\n        {gridItems.map((index) => (\n          <div key={index} className=\"relative w-20 h-20\" />\n        ))}\n      </div>\n\n      <div className=\"flex w-full max-w-[969px] items-center absolute top-[100px] left-1/2 transform -translate-x-1/2 flex-col gap-6\">\n        <h1 className=\"relative self-stretch mt-[-1.00px] font-semibold text-shadeswhite text-[48px] text-center tracking-[-1.92px] leading-[56px]\">\n          What Makes CRO the Smarter Investment\n        </h1>\n      </div>\n\n      {/* The ref is now attached to this specific container */}\n      <div ref={tableContainerRef} className=\"flex flex-col w-full max-w-[1246px] items-start justify-center p-[9px] absolute top-[214px] left-1/2 transform -translate-x-1/2 bg-[#6ae49914] rounded-3xl overflow-hidden border-2 border-solid border-[#6ae4994c] shadow-[inset_0px_0px_0px_9px_#ffffff08]\">\n        <Card className=\"inline-flex flex-col items-center justify-center p-6 relative flex-[0_0_auto] rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(2,6,1,0.4)_0%,rgba(2,6,1,0.4)_100%)] overflow-hidden\">\n          <CardContent className=\"relative w-full max-w-[1176px] flex-[0_0_auto] rounded-lg overflow-hidden p-0\">\n            <Table className=\"w-full overflow-hidden\">\n              <TableHeader>\n                <TableRow className=\"border-b border-[#0a381c]\">\n                  <TableHead className=\"w-[366px] h-[72px] p-4 bg-[#0b130e] text-left\">\n                    <div className=\"font-semibold text-secondary-400 text-[18px] tracking-[0px] leading-[21.6px]\">\n                      Feature / Pain Point\n                    </div>\n                  </TableHead>\n                  <TableHead className=\"w-[270px] h-[72px] p-4 bg-[#0b130e] text-center\">\n                    <div className=\"font-semibold text-secondary-400 text-[18px] tracking-[0px] leading-[21.6px]\">\n                      Running Ads\n                    </div>\n                  </TableHead>\n                  <TableHead className=\"w-[270px] h-[72px] p-4 bg-[#0b130e] text-center\">\n                    <div className=\"font-semibold text-secondary-400 text-[18px] tracking-[0px] leading-[21.6px]\">\n                      Website Redesign\n                    </div>\n                  </TableHead>\n                  <TableHead className=\"w-[270px] h-[72px] p-4 bg-[#0b130e] text-center\">\n                    <div className=\"font-semibold text-secondary-400 text-[18px] tracking-[0px] leading-[21.6px]\">\n                      Conversion Optimization\n                    </div>\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {tableData.map((row, index) => {\n                  const start = index * 0.1;\n                  const end = start + 0.5; // Give each animation a bit of duration\n\n                  const x = useTransform(scrollYProgress, [start, end], [index % 2 === 0 ? -300 : 300, 0]);\n                  const opacity = useTransform(scrollYProgress, [start, end], [0, 1]);\n\n                  return (\n                    <motion.tr\n                      key={index}\n                      className={`${index === tableData.length - 1 ? \"border-0\" : \"border-b border-[#0a381c]\"}`}\n                      style={{ x, opacity }}\n                    >\n                    <TableCell className=\"w-[366px] h-14 p-4 bg-[#0b130e] align-top\">\n                      <div className=\"mt-[-1.00px] font-normal text-shadeswhite text-[16px] tracking-[0px] leading-[19px] whitespace-nowrap\">\n                        {row.feature}\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"w-[270px] h-14 p-4 bg-[#0b130e] text-center\">\n                      {row.runningAds ? (\n                        <CheckIcon className=\"w-6 h-6 mx-auto text-green-500\" />\n                      ) : (\n                        <div className=\"w-6 h-6 mx-auto rounded-full bg-[#4a1c1c] border border-[#8b2c2c] flex items-center justify-center\">\n                          <XIcon className=\"w-4 h-4 text-[#d64545]\" />\n                        </div>\n                      )}\n                    </TableCell>\n                    <TableCell className=\"w-[270px] h-14 p-4 bg-[#0b130e] text-center\">\n                      {row.websiteRedesign ? (\n                        <CheckIcon className=\"w-6 h-6 mx-auto text-green-500\" />\n                      ) : (\n                        <div className=\"w-6 h-6 mx-auto rounded-full bg-[#4a1c1c] border border-[#8b2c2c] flex items-center justify-center\">\n                          <XIcon className=\"w-4 h-4 text-[#d64545]\" />\n                        </div>\n                      )}\n                    </TableCell>\n                    <TableCell className=\"w-[270px] h-14 p-4 bg-[#0b130e] text-center\">\n                      {row.conversionOptimization ? (\n                        <CheckIcon className=\"w-6 h-6 mx-auto text-green-500\" />\n                      ) : (\n                        <div className=\"w-6 h-6 mx-auto rounded-full bg-[#4a1c1c] border border-[#8b2c2c] flex items-center justify-center\">\n                          <XIcon className=\"w-4 h-4 text-[#d64545]\" />\n                        </div>\n                      )}\n                    </TableCell>\n                  </motion.tr>\n                );\n                })}\n              </TableBody>\n            </Table>\n          </CardContent>\n\n          <img\n            className=\"absolute top-0 right-[57px] w-[381px] h-2\"\n            alt=\"Mask group\"\n            src=\"/figmaAssets/mask-group-26.svg\"\n          />\n\n          <img\n            className=\"absolute left-[57px] bottom-[-7px] w-[381px] h-2\"\n            alt=\"Mask group\"\n            src=\"/figmaAssets/mask-group-20.svg\"\n          />\n        </Card>\n      </div>\n    </section>\n  );\n};","size_bytes":7934},"client/src/pages/sections/FeatureSection.tsx":{"content":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\n// Data has been simplified: removed containerClasses, blur, opacity, and isHighlighted properties\nconst processSteps = [\n  {\n    number: \"01\",\n    title: \"Discovery — Deep Dive Analysis\",\n    description: \"We align with your business goals, audit your analytics and tracking, and ensure the data we use is 100% reliable\",\n    lineSrc: \"/figmaAssets/line-72-2.svg\",\n    topMaskSrc: \"/figmaAssets/mask-group-39.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-43.svg\",\n  },\n  {\n    number: \"02\",\n    title: \"Research — User Behavior Insights\",\n    description: \"Using heatmaps, session recordings, usability tests, polls, and analytics, we uncover why users don't convert\",\n    lineSrc: \"/figmaAssets/line-72-2.svg\",\n    topMaskSrc: \"/figmaAssets/mask-group-39.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-43.svg\",\n  },\n  {\n    number: \"03\",\n    title: \"Ideation — Creative Test Development\",\n    description: \"Our CRO experts craft hypotheses and test ideas based on psychology, UX best practices, and proven copywriting principles\",\n    lineSrc: \"/figmaAssets/line-72-2.svg\",\n    topMaskSrc: \"/figmaAssets/mask-group-39.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-43.svg\",\n  },\n  {\n    number: \"04\",\n    title: \"Prioritization — Strategic Planning\",\n    description: \"We rank experiments using the ICE framework (Impact, Confidence, Ease) to focus on the tests that will drive the highest ROI first\",\n    lineSrc: \"/figmaAssets/line-72-2.svg\",\n    topMaskSrc: \"/figmaAssets/mask-group-39.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-43.svg\",\n  },\n  {\n    number: \"05\",\n    title: \"Experimentation — Testing & Implementation\",\n    description: \"We launch tests, run QA, and analyze results in real time — building a knowledge base of what works for your store\",\n    lineSrc: \"/figmaAssets/line-72-2.svg\",\n    topMaskSrc: \"/figmaAssets/mask-group-39.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-43.svg\",\n  },\n  {\n    number: \"06\",\n    title: \"Results — Optimization & Scale\",\n    description: \"Winning experiments are rolled out site-wide. Then the cycle repeats — so your store keeps improving every month\",\n    lineSrc: \"/figmaAssets/line-72-2.svg\",\n    topMaskSrc: \"/figmaAssets/mask-group-39.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-43.svg\",\n  },\n];\n\n// Animation constants\nconst ANIMATION_DURATION = 27; // Total duration in seconds for one cycle\nconst TOTAL_STEPS = processSteps.length;\nconst STEP_INTERVAL_PERCENTAGE = 100 / TOTAL_STEPS;\nconst SLIDE_CHANGE_TIMING = 3; // The percentage of the animation cycle for a slide to transition\n\nexport const FeatureSection = (): JSX.Element => {\n  return (\n    <>\n      {/* \n        This style block contains the CSS animation logic. \n        For best practice, this should be moved to a global CSS file.\n      */}\n      <style>{`\n        .carousel-item {\n          display: flex;\n          align-items: center;\n          position: absolute;\n          width: 100%;\n          padding: 0 12px;\n          filter: drop-shadow(0 2px 2px #555);\n          will-change: transform, opacity, z-index;\n          animation: carousel-animate-vertical ${ANIMATION_DURATION}s linear infinite;\n        }\n        .carousel-item .step-number {\n          animation: carousel-color-animate ${ANIMATION_DURATION}s step-end infinite;\n          animation-delay: var(--animation-delay, 0s);\n        }\n        .carousel-item .step-title {\n          animation: carousel-color-animate ${ANIMATION_DURATION}s step-end infinite;\n          animation-delay: var(--animation-delay, 0s);\n        }\n        @keyframes carousel-animate-vertical {\n          0% {\n            transform: translateY(180%) scale(0.5);\n            opacity: 0.3;\n            z-index: 1;\n            visibility: visible;\n          }\n          ${SLIDE_CHANGE_TIMING}%,\n          ${STEP_INTERVAL_PERCENTAGE}% {\n            transform: translateY(120%) scale(0.6);\n            opacity: 0.4;\n            z-index: 2;\n            visibility: visible;\n          }\n          ${STEP_INTERVAL_PERCENTAGE + SLIDE_CHANGE_TIMING}%,\n          ${STEP_INTERVAL_PERCENTAGE * 2}% {\n            transform: translateY(80%) scale(0.7);\n            opacity: 0.5;\n            z-index: 3;\n            visibility: visible;\n          }\n          ${(STEP_INTERVAL_PERCENTAGE * 2) + SLIDE_CHANGE_TIMING}%,\n          ${STEP_INTERVAL_PERCENTAGE * 3}% {\n            transform: translateY(0) scale(1);\n            opacity: 1;\n            z-index: 10;\n            visibility: visible;\n          }\n          ${(STEP_INTERVAL_PERCENTAGE * 3) + SLIDE_CHANGE_TIMING}%,\n          ${STEP_INTERVAL_PERCENTAGE * 4}% {\n            transform: translateY(-80%) scale(0.7);\n            opacity: 0.5;\n            z-index: 3;\n            visibility: visible;\n          }\n          ${(STEP_INTERVAL_PERCENTAGE * 4) + SLIDE_CHANGE_TIMING}%,\n          ${STEP_INTERVAL_PERCENTAGE * 5}% {\n            transform: translateY(-120%) scale(0.6);\n            opacity: 0.4;\n            z-index: 2;\n            visibility: visible;\n          }\n          ${(STEP_INTERVAL_PERCENTAGE * 5) + SLIDE_CHANGE_TIMING}%,\n          100% {\n            transform: translateY(-180%) scale(0.5);\n            opacity: 0.3;\n            z-index: 1;\n            visibility: visible;\n          }\n        }\n        @keyframes carousel-color-animate {\n          0%, ${(STEP_INTERVAL_PERCENTAGE * 2) + SLIDE_CHANGE_TIMING - 0.01}% {\n            color: rgb(176, 241, 201);\n          }\n          ${(STEP_INTERVAL_PERCENTAGE * 2) + SLIDE_CHANGE_TIMING}%, ${STEP_INTERVAL_PERCENTAGE * 3}% {\n            color: #6ae499;\n          }\n          ${STEP_INTERVAL_PERCENTAGE * 3 + 0.01}%, 100% {\n            color: rgb(176, 241, 201);\n          }\n        }\n      `}</style>\n\n      <section id=\"section-feature-process\" className=\"relative w-full h-[1040px] bg-dark-mode900 overflow-hidden\">\n        {/* Left side content */}\n        <div className=\"inline-flex flex-col items-start gap-6 absolute top-[calc(50.00%_-_209px)] left-8 z-10\">\n            <h1 className=\"relative self-stretch mt-[-1.00px] font-semibold text-shadeswhite text-[48px] tracking-[-1.92px] leading-[56px] whitespace-pre-wrap\">\n                {`Our Proven\\nConversion\\nOptimization\\nProcess`}\n            </h1>\n            <p className=\"relative w-[389px] font-normal text-shadeswhite text-[20px] tracking-[0px] leading-6\">\n                We follow a systematic 6-step approach that has generated millions in additional revenue for e-commerce brands across the GCC.\n            </p>\n            <Button \n              className=\"inline-flex items-center justify-center gap-2 px-5 py-3.5 relative flex-[0_0_auto] bg-secondary-500 rounded h-auto hover:bg-secondary-500\"\n              onClick={() => {\n                document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n              }}\n            >\n                <span className=\"relative w-fit mt-[-1.00px] font-semibold text-neutral-900 text-[18px] tracking-[0px] leading-[21.6px] whitespace-nowrap\">\n                    Book a Free CRO Audit\n                </span>\n            </Button>\n        </div>\n\n        {/* Right side carousel viewport */}\n        <div className=\"absolute top-[100px] left-[516px] w-[892px] h-[840px] flex justify-center items-center\">\n          {processSteps.map((step, index) => {\n            // Calculate the delay for each item to create the carousel effect\n            const animationDelayFraction = ANIMATION_DURATION / TOTAL_STEPS;\n            const animationDelay = animationDelayFraction * (index - 2);\n\n            return (\n              <div\n                key={`step-${step.number}`}\n                className=\"carousel-item\"\n                style={{ \n                  animationDelay: `${animationDelay}s`,\n                  '--animation-delay': `${animationDelay}s`\n                } as React.CSSProperties}\n              >\n                <div\n                  className=\"w-full p-[9px] rounded-3xl border border-solid border-[#ffffff1a] bg-[#6ae4990a] shadow-[inset_0px_0px_0px_9px_#ffffff08,0px_8px_50px_#000000,0px_-8px_50px_#000000]\"\n                >\n                  <Card className=\"flex items-center justify-center relative w-full border-solid border-[#6ae49933] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)] gap-4 p-6 rounded-2xl border\">\n                    <CardContent className=\"flex items-center justify-center w-full p-0\">\n                      <img className=\"absolute top-0 right-[57px] w-[180px] h-2\" alt=\"Top mask\" src={step.topMaskSrc} />\n                      <div className=\"step-number relative w-[101px] opacity-15 font-semibold text-secondary-200 font-display-01-semi-bold font-[number:var(--display-01-semi-bold-font-weight)] text-[length:var(--display-01-semi-bold-font-size)] tracking-[var(--display-01-semi-bold-letter-spacing)] leading-[var(--display-01-semi-bold-line-height)] [font-style:var(--display-01-semi-bold-font-style)]\">\n                        {step.number}\n                      </div>\n                      <div className=\"flex flex-col items-start relative flex-1 grow gap-4\">\n                        <div className=\"step-title relative self-stretch font-semibold text-secondary-200 font-heading-h5-semi-bold font-[number:var(--heading-h5-semi-bold-font-weight)] text-[length:var(--heading-h5-semi-bold-font-size)] tracking-[var(--heading-h5-semi-bold-letter-spacing)] leading-[var(--heading-h5-semi-bold-line-height)] [font-style:var(--heading-h5-semi-bold-font-style)] mt-[-1.00px]\">\n                          {step.title}\n                        </div>\n                        <img className=\"relative self-stretch w-full h-px\" alt=\"Line\" src={step.lineSrc} />\n                        <div className=\"relative self-stretch font-normal text-shadeswhite font-paragraph-p2-regular font-[number:var(--paragraph-p2-regular-font-weight)] text-[length:var(--paragraph-p2-regular-font-size)] tracking-[var(--paragraph-p2-regular-letter-spacing)] leading-[var(--paragraph-p2-regular-line-height)] [font-style:var(--paragraph-p2-regular-font-style)]\">\n                          {step.description}\n                        </div>\n                      </div>\n                      <img className=\"absolute left-[57px] bottom-[-7px] w-[180px] h-2\" alt=\"Bottom mask\" src={step.bottomMaskSrc} />\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    </>\n  );\n};","size_bytes":10846},"client/src/pages/sections/FooterSection.tsx":{"content":"import React from \"react\";\nimport { Separator } from \"@/components/ui/separator\";\n\nexport const FooterSection = (): JSX.Element => {\n  const backgroundStripes = Array.from({ length: 36 }, (_, index) => index);\n\n  const quickLinks = [\n    { label: \"About\", sectionId: \"section-learn-cro\" },\n    { label: \"Services\", sectionId: \"section-services\" },\n    { label: \"ROI Calculator\", sectionId: \"roi-calculator-section\" },\n    { label: \"Contact\", sectionId: \"section-contact\" },\n  ];\n\n  const services = [\n    \"Conversion Rate Optimization\",\n    \"A/B Testing\",\n    \"User Experience Design\",\n    \"Analytics & Tracking\",\n  ];\n\n  const contactInfo = [\n    {\n      icon: \"/figmaAssets/communication---location-on.svg\",\n      text: \"Ras Al Khaimah Economic Zone Office\",\n      width: \"w-[268px]\",\n    },\n    {\n      icon: \"/figmaAssets/communication---location-on.svg\",\n      text: \"Office Business Hub, New Cairo, Egypt\",\n      width: \"w-[271px]\",\n    },\n    {\n      icon: \"/figmaAssets/communication---call.svg\",\n      text: \"+971 564800881\",\n      width: \"w-[115px]\",\n    },\n    {\n      icon: \"/figmaAssets/communication---call.svg\",\n      text: \"+2 01021001000\",\n      width: \"w-[120px]\",\n    },\n  ];\n\n  return (\n    <footer className=\"relative w-full h-[477px] bg-dark-mode300\">\n      <div className=\"flex h-[477px] items-center absolute top-[calc(50.00%_-_238px)] left-[calc(50.00%_-_720px)] bg-dark-mode700\">\n        {backgroundStripes.map((index) => (\n          <div\n            key={`stripe-${index}`}\n            className=\"relative h-full w-10 backdrop-blur-[17.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(17.5px)_brightness(100%)] bg-[linear-gradient(270deg,rgba(255,255,255,0.03)_0%,rgba(255,255,255,0.1)_100%)]\"\n          />\n        ))}\n      </div>\n\n      <div className=\"absolute top-[calc(50.00%_-_190px)] left-[calc(50.00%_-_672px)] w-[1344px] h-[381px] flex flex-col gap-[72px] bg-dark-mode900 rounded-2xl px-[84px]\">\n        <div className=\"flex h-[164px] w-full relative mt-14 items-start gap-[100px]\">\n          <div className=\"flex flex-col items-start gap-[18px] px-0 py-px relative flex-[0_0_auto]\">\n            <img\n              className=\"relative flex-[0_0_auto]\"\n              alt=\"Frame\"\n              src=\"/figmaAssets/frame-2131328446.svg\"\n            />\n\n            <div className=\"relative text-left w-[250px] text-shadeswhite text-[14px] font-normal tracking-[0px] leading-[1.5]\">\n              Leading CRO agency specializing in GCC e-commerce optimization.\n              Boost your conversions without extra ad spend.\n            </div>\n\n            <img\n              className=\"relative flex-[0_0_auto]\"\n              alt=\"Div social media\"\n              src=\"/figmaAssets/div-social-media-container.svg\"\n            />\n          </div>\n\n          <div className=\"flex flex-col w-[109px] items-start gap-6 relative\">\n            <div className=\"relative text-left self-stretch mt-[-1.00px] text-secondary-500 text-[16px] font-semibold tracking-[0px] leading-[1.5]\">\n              Quick Links\n            </div>\n\n            <div className=\"flex flex-col gap-2 self-stretch w-full items-start relative flex-[0_0_auto]\">\n              {quickLinks.map((link, index) => (\n                <div\n                  key={`quick-link-${index}`}\n                  className={`relative text-left self-stretch ${index === 0 ? \"mt-[-1.00px]\" : \"\"} text-shadeswhite text-[14px] font-normal tracking-[0px] leading-[1.5] cursor-pointer hover:text-secondary-500 transition-colors`}\n                  onClick={() => {\n                    document.getElementById(link.sectionId)?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                  }}\n                >\n                  {link.label}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"flex flex-col gap-6 items-start relative flex-[0_0_auto]\">\n            <div className=\"relative text-left self-stretch mt-[-1.00px] text-secondary-500 text-[16px] font-semibold tracking-[0px] leading-[1.5]\">\n              Services\n            </div>\n\n            <div className=\"flex flex-col items-start gap-2 relative flex-[0_0_auto]\">\n              {services.map((service, index) => (\n                <div\n                  key={`service-${index}`}\n                  className={`${index === 0 ? \"text-left w-fit mt-[-1.00px] text-shadeswhite text-[14px] font-normal tracking-[0px] leading-[1.5] whitespace-nowrap relative\" : \"relative text-left self-stretch text-shadeswhite text-[14px] font-normal tracking-[0px] leading-[1.5]\"} cursor-pointer hover:text-secondary-500 transition-colors`}\n                  onClick={() => {\n                    document.getElementById('section-services')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                  }}\n                >\n                  {service}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"flex flex-col gap-6 items-start relative flex-[0_0_auto]\">\n            <div className=\"self-stretch mt-[-1.00px] text-secondary-500 text-[16px] font-semibold leading-[1.5] relative text-left tracking-[0px]\">\n              Contact Us\n            </div>\n\n            <div className=\"flex flex-col w-[303px] items-start gap-2 relative flex-[0_0_auto]\">\n              {contactInfo.map((contact, index) => (\n                <div\n                  key={`contact-${index}`}\n                  className={`${index < 2 ? \"flex items-start gap-2 relative self-stretch w-full flex-[0_0_auto]\" : \"flex items-start gap-2 relative flex-[0_0_auto]\"}`}\n                >\n                  <img\n                    className=\"relative w-6 h-6\"\n                    alt={index < 2 ? \"Communication\" : \"Communication call\"}\n                    src={contact.icon}\n                  />\n\n                  <div\n                    className={`relative text-left ${index < 2 ? \"self-stretch\" : \"self-stretch\"} ${contact.width} mt-[-1.00px] text-shadeswhite text-[14px] font-normal tracking-[0px] leading-[1.5]`}\n                  >\n                    {contact.text}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex w-full h-[41px] relative flex-col items-start gap-6\">\n          <Separator className=\"mt-[-1.00px] self-stretch w-full h-px bg-[url('/figmaAssets/line-266.svg')] bg-cover\" />\n\n          <div className=\"relative text-left self-stretch text-[#6a6d6a] text-[14px] font-normal tracking-[0px] leading-[1.5]\">\n            © 2025 Optimizers. All rights reserved.\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","size_bytes":6672},"client/src/pages/sections/GallerySection.tsx":{"content":"import React from \"react\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Button } from \"@/components/ui/button\";\n\nconst faqData = [\n  {\n    id: \"item-1\",\n    question: \"What ROI can I expect?\",\n    answer:\n      \"On average, our clients see a 10–30% increase in annual revenue and cover the cost of our services within 6 months.\",\n    topMaskSrc: \"/figmaAssets/mask-group-57.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-59.svg\",\n    defaultOpen: true,\n  },\n  {\n    id: \"item-2\",\n    question: \"How quickly will I see results?\",\n    answer:\n      \"Most stores see measurable improvements in as little as 3 months — with bigger gains from continuous testing.\",\n    topMaskSrc: \"/figmaAssets/mask-group-50.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-44.svg\",\n    defaultOpen: false,\n  },\n  {\n    id: \"item-3\",\n    question: \"What's the minimum commitment?\",\n    answer:\n      \"Just 6 months — enough to run real experiments and lock in lasting results. Many clients stay for years because of consistent growth.\",\n    topMaskSrc: \"/figmaAssets/mask-group-70.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-47.svg\",\n    defaultOpen: false,\n  },\n  {\n    id: \"item-4\",\n    question: \"Why is CRO a monthly service?\",\n    answer:\n      \"Because conversion optimization is not a one-time fix — it's a continuous cycle of research, testing, and scaling what works.\",\n    topMaskSrc: \"/figmaAssets/mask-group-45.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-68.svg\",\n    defaultOpen: false,\n  },\n  {\n    id: \"item-5\",\n    question: \"Is CRO only for big stores?\",\n    answer:\n      \"Not at all. Any store spending on ads or getting steady traffic can benefit from CRO. Smaller stores often see ROI even faster.\",\n    topMaskSrc: \"/figmaAssets/mask-group-49.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-54.svg\",\n    defaultOpen: false,\n  },\n  {\n    id: \"item-6\",\n    question: \"What metrics do you track?\",\n    answer:\n      \"Conversion rate, revenue per visitor, average order value, cart abandonment, and customer lifetime value.\",\n    topMaskSrc: \"/figmaAssets/mask-group-61.svg\",\n    bottomMaskSrc: \"/figmaAssets/mask-group-53.svg\",\n    defaultOpen: false,\n  },\n];\n\nexport const GallerySection = (): JSX.Element => {\n  return (\n    <section className=\"flex flex-col items-start gap-2 pt-[100px] pb-[200px] px-[270px] w-full bg-dark-mode900\">\n      <div className=\"flex flex-col w-[900px] items-center gap-[60px] mx-auto\">\n        <header className=\"flex w-[767px] items-start flex-col gap-6\">\n          <h1 className=\"self-stretch mt-[-1.00px] text-shadeswhite text-[48px] font-semibold text-center tracking-[-1.92px] leading-[56px]\">\n            Frequently Asked Questions\n          </h1>\n        </header>\n\n        <Accordion\n          type=\"single\"\n          collapsible\n          defaultValue=\"item-1\"\n          className=\"flex flex-col items-end gap-4 w-full\"\n        >\n          {faqData.map((faq) => (\n            <AccordionItem\n              key={faq.id}\n              value={faq.id}\n              className=\"flex flex-col w-[900px] items-start justify-center p-[9px] bg-[#ffffff03] rounded-3xl overflow-hidden border border-solid border-[#ffffff1a] shadow-[inset_0px_0px_0px_9px_#ffffff08] data-[state=open]:h-auto data-[state=closed]:h-auto\"\n            >\n              <div className=\"flex flex-col items-start w-full rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)] relative\">\n                <AccordionTrigger className=\"flex items-center justify-start gap-2 w-full p-6 hover:no-underline [&[data-state=open]>svg]:rotate-180 [&[data-state=open]_.question-text]:text-[#6ae499]\">\n                  <div className=\"question-text flex-1 mt-[-1.00px] text-shadeswhite text-[20px] font-semibold tracking-[0px] leading-6 text-left\">\n                    {faq.question}\n                  </div>\n                </AccordionTrigger>\n\n                <AccordionContent className=\"w-full pb-0 px-6\">\n                  <div className=\"text-neutral-100 text-[16px] font-normal tracking-[0px] leading-[19px] text-left pb-6\">\n                    {faq.answer}\n                  </div>\n                </AccordionContent>\n\n                <img\n                  className=\"absolute top-0 right-[57px] w-[180px] h-2 pointer-events-none\"\n                  alt=\"Mask group\"\n                  src={faq.topMaskSrc}\n                />\n\n                <img\n                  className=\"absolute left-[57px] bottom-[-7px] w-[180px] h-2 pointer-events-none\"\n                  alt=\"Mask group\"\n                  src={faq.bottomMaskSrc}\n                />\n              </div>\n            </AccordionItem>\n          ))}\n        </Accordion>\n\n        <Button \n          className=\"inline-flex items-center justify-center gap-2 px-5 py-3.5 bg-secondary-500 rounded h-auto hover:bg-secondary-500\"\n          onClick={() => {\n            document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n          }}\n        >\n          <span className=\"w-fit mt-[-1.00px] text-neutral-900 text-[18px] font-semibold tracking-[0px] leading-[21.6px] whitespace-nowrap\">\n            Still have questions? Book a Call\n          </span>\n        </Button>\n      </div>\n    </section>\n  );\n};\n","size_bytes":5591},"client/src/pages/sections/HeroSection.tsx":{"content":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nconst platformLogos = [\n  {\n    src: \"/figmaAssets/6687d1be6301f78fecf93bc7-63bd507de1ccf48089402fa4-uoyhhm4z-weg3a.png\",\n    alt: \"Img\",\n    className: \"w-[60px] h-8 object-cover\",\n  },\n  {\n    src: \"/figmaAssets/b9b3c47f-590c-9afc-97bc-b866bad86a72.png\",\n    alt: \"Bbcf c afc\",\n    className: \"w-[73px] h-8\",\n  },\n  {\n    src: \"/figmaAssets/358-3589718-shopify-logo-white-transparent-1.png\",\n    alt: \"Element shopify\",\n    className: \"w-28 h-8 object-cover\",\n  },\n  {\n    src: \"/figmaAssets/woocommerce-logo-1.png\",\n    alt: \"Woocommerce logo\",\n    className: \"w-14 h-8\",\n  },\n];\n\nexport const HeroSection = (): JSX.Element => {\n  return (\n    <section id=\"section-hero\" className=\"flex w-full h-[676px] items-end pt-0 pb-[60px] px-10 relative rounded-2xl overflow-hidden shadow-[0px_15px_61.7px_#93939340]\">\n      {/* Background Video */}\n      <video\n        autoPlay\n        loop\n        muted\n        playsInline\n        className=\"absolute inset-0 w-full h-full object-cover z-0\"\n        src=\"https://core.optimizers.agency/wp-content/uploads/2025/09/Optimizers-Header_1.mp4\"\n      >\n        Your browser does not support the video tag.\n      </video>\n      \n      {/* Overlay for text readability */}\n      <div className=\"absolute inset-0 w-full h-full bg-black/40 z-10 pointer-events-none\"></div>\n\n      <Card id=\"hero-card\" className=\"relative z-20 w-[493px] bg-[#ffffff33] border border-solid border-[#6ae49933] rounded-xl backdrop-blur-[20px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(20px)_brightness(100%)]\">\n        <CardContent id=\"hero-card-content\" className=\"flex flex-col items-start gap-12 p-8\">\n          <div id=\"hero-main-content\" className=\"flex flex-col items-start gap-6 w-full\">\n            <h1 id=\"hero-title\" className=\"font-semibold text-white text-[34px] tracking-[-1.36px] leading-[40px]\">\n              Your ads bring visitors,\n              <br />\n              we turn them into buyers.\n            </h1>\n\n            <p id=\"hero-description\" className=\"font-normal text-white text-[20px] tracking-[0px] leading-[24px]\">\n              If you&apos;re investing in ads but not seeing enough sales,\n              we&apos;ll find the leaks in your funnel, fix them, and maximize\n              your returns.\n            </p>\n\n            <Button \n              id=\"hero-cta-button\" \n              className=\"inline-flex items-center justify-center gap-2 px-5 py-3.5 bg-secondary-500 rounded h-auto hover:bg-secondary-500\"\n              onClick={() => {\n                document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n              }}\n            >\n              <span id=\"hero-cta-button-text\" className=\"font-semibold text-neutral-900 text-[18px] tracking-[0px] leading-[21.6px] whitespace-nowrap\">\n                Start Your Journey Now\n              </span>\n            </Button>\n          </div>\n\n          <div id=\"hero-platforms-section\" className=\"flex flex-col items-start gap-4 w-full\">\n            <h2 id=\"hero-platforms-title\" className=\"font-semibold text-white text-[16px] tracking-[-0.32px] leading-[19px]\">\n              Built for leading platforms:\n            </h2>\n\n            <div id=\"hero-platforms-logos\" className=\"inline-flex items-start gap-4\">\n              {platformLogos.map((logo, index) => (\n                <img\n                  key={index}\n                  id={`hero-platform-logo-${index + 1}`}\n                  className={`relative ${logo.className}`}\n                  alt={logo.alt}\n                  src={logo.src}\n                />\n              ))}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </section>\n  );\n};","size_bytes":3850},"client/src/pages/sections/InfoWrapperSection.tsx":{"content":"\"use client\";\n\nimport React, { useState, useMemo } from \"react\";\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Slider } from '@/components/ui/slider';\nimport { RotateCcwIcon, ArrowLeftRightIcon, MinusIcon, PlusIcon } from 'lucide-react';\n\n// --- Default Values for Reset ---\nconst defaultValues = {\n  currency: \"SAR\",\n  monthlyUsers: 12000,\n  currentCR: 2.5,\n  currentAOV: 260,\n  newCR: 3.5,\n  newAOV: 280,\n};\n\n// --- Reusable Number Input with +/- Controls ---\nconst NumberInputWithControls = ({ id, value, onChange, onDecrement, onIncrement, prefix, suffix, className }: {\n    id: string;\n    value: number | string;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    onDecrement: () => void;\n    onIncrement: () => void;\n    prefix?: string;\n    suffix?: string;\n    className?: string;\n}) => (\n    <div className={`inline-flex items-center h-12 rounded-md bg-[#2d2d2d] border border-neutral-700 ${className}`}>\n        <Button id={`btn-decrement-${id}`} onClick={onDecrement} variant=\"ghost\" size=\"icon\" className=\"w-12 h-full rounded-r-none hover:bg-white/10\">\n            <MinusIcon className=\"w-4 h-4 text-white\" />\n        </Button>\n        <div className=\"relative flex items-center justify-center w-[180px] h-full\">\n            <Input\n                id={id}\n                type=\"number\"\n                value={value}\n                onChange={onChange}\n                className=\"w-full h-full p-0 text-center text-[18px] font-semibold text-shadeswhite bg-transparent border-x border-neutral-700 rounded-none focus-visible:ring-0 focus-visible:ring-offset-0\"\n            />\n             {suffix && <span className=\"absolute right-4 text-[18px] font-semibold text-shadeswhite pointer-events-none\">{suffix}</span>}\n             {prefix && <span className=\"absolute left-4 text-[18px] font-semibold text-shadeswhite pointer-events-none\">{prefix}</span>}\n        </div>\n        <Button id={`btn-increment-${id}`} onClick={onIncrement} variant=\"ghost\" size=\"icon\" className=\"w-12 h-full rounded-l-none hover:bg-white/10\">\n            <PlusIcon className=\"w-4 h-4 text-white\" />\n        </Button>\n    </div>\n);\n\nexport const InfoWrapperSection = (): JSX.Element => {\n  const [currency, setCurrency] = useState(defaultValues.currency);\n  const [monthlyUsers, setMonthlyUsers] = useState(defaultValues.monthlyUsers);\n  const [currentCR, setCurrentCR] = useState(defaultValues.currentCR);\n  const [currentAOV, setCurrentAOV] = useState(defaultValues.currentAOV);\n  const [newCR, setNewCR] = useState(defaultValues.newCR);\n  const [newAOV, setNewAOV] = useState(defaultValues.newAOV);\n\n  const calculatedValues = useMemo(() => {\n    const currentConversions = Math.round(monthlyUsers * (currentCR / 100));\n    const newConversions = Math.round(monthlyUsers * (newCR / 100));\n    const currentMonthlyRevenue = currentConversions * currentAOV;\n    const newMonthlyRevenue = newConversions * newAOV;\n    const additionalMonthlyRevenue = newMonthlyRevenue - currentMonthlyRevenue;\n    const percentageIncrease = currentMonthlyRevenue > 0 ? (additionalMonthlyRevenue / currentMonthlyRevenue) * 100 : 0;\n    return {\n      currentMonthlyRevenue,\n      currentAnnualRevenue: currentMonthlyRevenue * 12,\n      newMonthlyRevenue,\n      newAnnualRevenue: newMonthlyRevenue * 12,\n      additionalMonthlyRevenue: Math.max(0, additionalMonthlyRevenue),\n      percentageIncrease: Math.max(0, percentageIncrease),\n      newConversions,\n    };\n  }, [monthlyUsers, currentCR, currentAOV, newCR, newAOV]);\n\n  const formatCurrency = (value: number) => value.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 });\n  const handleReset = () => {\n    setCurrency(defaultValues.currency);\n    setMonthlyUsers(defaultValues.monthlyUsers);\n    setCurrentCR(defaultValues.currentCR);\n    setCurrentAOV(defaultValues.currentAOV);\n    setNewCR(defaultValues.newCR);\n    setNewAOV(defaultValues.newAOV);\n  };\n  \n  const getCurrencySymbol = () => {\n      switch(currency) {\n          case 'SAR': return '﷼';\n          case 'USD': return '$';\n          case 'EGP': return '£';\n          default: return '﷼';\n      }\n  };\n\n  return (\n    <section id=\"roi-calculator-section\" className=\"w-full bg-dark-mode900 py-[100px]\">\n      <style>{`\n        div#card-current-projection {\n          height: 818px;\n        }\n        .flex.gap-3.w-full.pt-6.relative.right-\\\\[20px\\\\] {\n          position: relative;\n          left: 1px;\n        }\n        /* Slider track (unfilled part - the background) */\n        #roi-calculator-section [role=\"slider\"] {\n          /* This targets the thumb/cursor itself if needed */\n        }\n        /* The slider container has the track as a span child */\n        #roi-calculator-section .relative.flex.w-full.touch-none > span.relative {\n          background-color: black !important;\n        }\n        /* Slider range (filled part - before cursor) - the absolute positioned span inside track */\n        #roi-calculator-section .relative.flex.w-full.touch-none > span.relative > span.absolute {\n          background-color: #68e397 !important;\n        }\n        /* Remove default number input spinners/arrows (Chrome, Safari, Edge, Opera) */\n        #roi-calculator-section input[type=number]::-webkit-inner-spin-button,\n        #roi-calculator-section input[type=number]::-webkit-outer-spin-button {\n          -webkit-appearance: none;\n          margin: 0;\n        }\n        /* Remove default number input spinners/arrows (Firefox) */\n        #roi-calculator-section input[type=number] {\n          -moz-appearance: textfield;\n          appearance: textfield;\n        }\n      `}</style>\n      <div className=\"flex flex-col max-w-[1144px] mx-auto items-center gap-[60px] px-4\">\n        <header id=\"roi-calculator-header\" className=\"flex flex-col items-start gap-6 w-full\">\n            <h1 className=\"w-full font-semibold text-shadeswhite text-[48px] tracking-[-1.92px] leading-[56px]\">ROI Calculator</h1>\n            <p className=\"max-w-[980px] font-normal text-shadeswhite text-[20px] tracking-[0px] leading-6\">\n                See the real impact CRO can have on your business. Enter just a few numbers and instantly discover what a 10–40% lift in conversions could mean for your monthly revenue.\n            </p>\n        </header>\n\n        <div id=\"roi-calculator-body\" className=\"flex flex-col items-start gap-10 w-full\">\n          <div id=\"roi-inputs-container\" className=\"flex flex-col items-center gap-6 w-full\">\n            <h2 className=\"w-full font-semibold text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px]\">1. Start Entering Your Data</h2>\n            <div className=\"flex items-end gap-6 w-full flex-wrap\">\n              <div className=\"inline-flex flex-col items-start gap-3\">\n                <label id=\"label-currency\" htmlFor=\"select-currency-trigger\" className=\"font-normal text-shadeswhite text-[18px] tracking-[0px] leading-[21.6px]\">Currency</label>\n                <Select value={currency} onValueChange={setCurrency}>\n                    <SelectTrigger id=\"select-currency-trigger\" className=\"w-[300px] h-12 text-shadeswhite bg-[#2d2d2d] border-neutral-700 font-semibold text-[18px]\"><SelectValue /></SelectTrigger>\n                    <SelectContent><SelectItem value=\"SAR\" className=\"font-semibold text-[18px]\">SAR</SelectItem><SelectItem value=\"USD\" className=\"font-semibold text-[18px]\">USD</SelectItem><SelectItem value=\"EGP\" className=\"font-semibold text-[18px]\">EGP</SelectItem></SelectContent>\n                </Select>\n              </div>\n              <div className=\"inline-flex flex-col items-start gap-3\">\n                <label id=\"label-monthly-users\" htmlFor=\"input-monthly-users\" className=\"text-[18px] font-normal text-shadeswhite\">Monthly Website Users</label>\n                <NumberInputWithControls\n                    id=\"input-monthly-users\"\n                    value={monthlyUsers}\n                    onChange={(e) => setMonthlyUsers(parseInt(e.target.value) || 0)}\n                    onDecrement={() => setMonthlyUsers(prev => Math.max(0, prev - 100))}\n                    onIncrement={() => setMonthlyUsers(prev => prev + 100)}\n                />\n              </div>\n              <Button id=\"btn-reset-calculator\" onClick={handleReset} variant=\"outline\" className=\"h-12 px-[18px] py-3 bg-transparent border-[#66d992] text-[#66d992] hover:bg-[#66d992]/10 hover:text-[#66d992]\">\n                  <span className=\"font-semibold text-[16px] tracking-[0px] leading-[19px]\">Reset</span>\n                  <RotateCcwIcon className=\"w-4 h-4 ml-2\" />\n              </Button>\n            </div>\n          </div>\n\n          <div id=\"roi-projections-container\" className=\"flex flex-col items-center gap-6 w-full\">\n            <h2 className=\"w-full font-semibold text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px]\">2. Now Calculate Your ROI Projection</h2>\n            <div className=\"flex items-center justify-between w-full gap-6 flex-wrap lg:flex-nowrap\">\n              {/* CURRENT Card */}\n              <Card id=\"card-current-projection\" className=\"w-full lg:w-[500px] p-8 rounded-2xl border border-solid border-white/20 bg-[#1c1c1c]\">\n                <CardContent className=\"p-0 flex flex-col gap-12\">\n                  <h3 className=\"w-full font-semibold text-center text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px]\">CURRENT</h3>\n                  <div className=\"flex flex-col items-center gap-5 w-full\">\n                      <label id=\"label-current-cr\" htmlFor=\"slider-current-cr\" className=\"text-white text-center text-[16px] font-normal\">Your CURRENT conversion rate</label>\n                      <Slider id=\"slider-current-cr\" value={[currentCR]} onValueChange={([val]) => setCurrentCR(val)} max={20} step={0.1} className=\"bg-neutral-700 [&>span:first-child]:bg-[#66d992]\" />\n                      <NumberInputWithControls id=\"input-current-cr\" value={currentCR.toFixed(1)} onChange={e => setCurrentCR(parseFloat(e.target.value) || 0)} onDecrement={() => setCurrentCR(p => Math.max(0.1, p - 0.1))} onIncrement={() => setCurrentCR(p => p + 0.1)} suffix=\"%\" className=\"[&_input]:text-[18px] [&_input]:font-semibold [&_span]:text-[18px] [&_span]:font-semibold\" />\n                  </div>\n                  <div className=\"flex flex-col items-center gap-5 w-full\">\n                      <label id=\"label-current-aov\" htmlFor=\"slider-current-aov\" className=\"text-white text-center text-[16px] font-normal\">Your CURRENT average order value</label>\n                      <Slider id=\"slider-current-aov\" value={[currentAOV]} onValueChange={([val]) => setCurrentAOV(val)} max={2000} step={10} className=\"bg-neutral-700 [&>span:first-child]:bg-[#66d992]\" />\n                      <NumberInputWithControls id=\"input-current-aov\" value={currentAOV} onChange={e => setCurrentAOV(parseInt(e.target.value) || 0)} onDecrement={() => setCurrentAOV(p => Math.max(0, p - 10))} onIncrement={() => setCurrentAOV(p => p + 10)} prefix={getCurrencySymbol()} className=\"[&_input]:text-[18px] [&_input]:font-semibold [&_span]:text-[18px] [&_span]:font-semibold\" />\n                  </div>\n                  <div className=\"flex gap-3 w-full pt-6 relative right-[20px]\">\n                      <InfoCard id=\"card-current-monthly-revenue\" title=\"Current Monthly Revenue\" value={formatCurrency(calculatedValues.currentMonthlyRevenue)} currencySymbol={getCurrencySymbol()} />\n                      <InfoCard id=\"card-current-annual-revenue\" title=\"Current Annual Revenue\" value={formatCurrency(calculatedValues.currentAnnualRevenue)} currencySymbol={getCurrencySymbol()} />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <div id=\"projection-separator-icon\" className=\"flex items-center justify-center w-12 h-12 rounded bg-[#66d992] shrink-0\">\n                <ArrowLeftRightIcon className=\"w-6 h-6 text-black\" />\n              </div>\n\n              {/* NEW Card */}\n              <Card id=\"card-new-projection\" className=\"w-full lg:w-[500px] p-8 rounded-2xl border border-solid border-white/20 bg-[#1c1c1c]\">\n                <CardContent className=\"p-0 flex flex-col gap-12\">\n                  <h3 className=\"w-full font-semibold text-center text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px]\">NEW</h3>\n                  <div className=\"flex flex-col items-center gap-5 w-full\">\n                      <label id=\"label-new-cr\" htmlFor=\"slider-new-cr\" className=\"text-white text-center text-[16px] font-normal\">Your NEW conversion rate</label>\n                      <Slider id=\"slider-new-cr\" value={[newCR]} onValueChange={([val]) => setNewCR(val)} max={20} step={0.1} className=\"bg-neutral-700 [&>span:first-child]:bg-[#66d992]\" />\n                      <NumberInputWithControls id=\"input-new-cr\" value={newCR.toFixed(1)} onChange={e => setNewCR(parseFloat(e.target.value) || 0)} onDecrement={() => setNewCR(p => Math.max(0.1, p - 0.1))} onIncrement={() => setNewCR(p => p + 0.1)} suffix=\"%\" className=\"[&_input]:text-[18px] [&_input]:font-semibold [&_span]:text-[18px] [&_span]:font-semibold\" />\n                  </div>\n                  <div className=\"flex flex-col items-center gap-5 w-full\">\n                      <label id=\"label-new-aov\" htmlFor=\"slider-new-aov\" className=\"text-white text-center text-[16px] font-normal\">Your NEW average order value</label>\n                      <Slider id=\"slider-new-aov\" value={[newAOV]} onValueChange={([val]) => setNewAOV(val)} max={2000} step={10} className=\"bg-neutral-700 [&>span:first-child]:bg-[#66d992]\" />\n                      <NumberInputWithControls id=\"input-new-aov\" value={newAOV} onChange={e => setNewAOV(parseInt(e.target.value) || 0)} onDecrement={() => setNewAOV(p => Math.max(0, p - 10))} onIncrement={() => setNewAOV(p => p + 10)} prefix={getCurrencySymbol()} className=\"[&_input]:text-[18px] [&_input]:font-semibold [&_span]:text-[18px] [&_span]:font-semibold\" />\n                  </div>\n                  {/* --- MODIFIED LAYOUT FOR \"NEW\" CARD RESULTS --- */}\n                  <div className=\"flex flex-col items-center gap-3 w-full pt-6\">\n                      <div className=\"grid grid-cols-2 gap-3 w-full max-w-md\">\n                          <InfoCard id=\"card-new-monthly-revenue\" title=\"New Monthly Revenue\" value={formatCurrency(calculatedValues.newMonthlyRevenue)} currencySymbol={getCurrencySymbol()} textColor=\"text-[#66d992]\"/>\n                          <InfoCard id=\"card-new-annual-revenue\" title=\"New Annual Revenue\" value={formatCurrency(calculatedValues.newAnnualRevenue)} currencySymbol={getCurrencySymbol()} textColor=\"text-[#66d992]\"/>\n                          <InfoCard id=\"card-additional-monthly-revenue\" title=\"Additional Revenue / Month\" value={`+${formatCurrency(calculatedValues.additionalMonthlyRevenue)}`} currencySymbol={getCurrencySymbol()} textColor=\"text-[#66d992]\" />\n                          <InfoCard id=\"card-percentage-increase\" title=\"% Increase in Revenue\" value={`${calculatedValues.percentageIncrease.toFixed(1)}%`} textColor=\"text-[#66d992]\" />\n                      </div>\n                      <div className=\"w-full max-w-md\">\n                          <InfoCard id=\"card-new-conversions\" title=\"New number of conversions / Month\" value={calculatedValues.newConversions.toLocaleString()} textColor=\"text-[#66d992]\" />\n                      </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\n// --- Reusable Helper Component for Display Cards (Now with ID prop) ---\nconst InfoCard = ({ id, title, value, textColor = \"text-neutral-200\", currencySymbol }: { id: string, title: string, value: string, textColor?: string, currencySymbol?: string }) => (\n    <Card id={id} className=\"flex-1 p-5 rounded-2xl border border-solid border-white/10 bg-[#2d2d2d]\">\n        <CardContent className=\"p-0 flex flex-col items-center justify-center gap-2\">\n            <p className=\"text-shadeswhite text-center whitespace-nowrap text-[14px] font-normal\">{title}</p>\n            <div className=\"flex items-center justify-center gap-1.5 w-full\">\n                <span id={`value-${id}`} className={`text-[19px] font-semibold ${textColor}`}>{value}</span>\n                {currencySymbol && <span id={`currency-${id}`} className={`text-[19px] font-semibold ${textColor}`}>{currencySymbol}</span>}\n            </div>\n        </CardContent>\n    </Card>\n);","size_bytes":16657},"client/src/pages/sections/MainContentSection.tsx":{"content":"import React from \"react\";\n\nexport const MainContentSection = (): JSX.Element => {\n  return (\n    <section className=\"relative w-full h-[800px] bg-dark-mode900\">\n      <img\n        className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[1400px] h-[900px]\"\n        alt=\"Frame\"\n        src=\"/figmaAssets/frame-2131328359.svg\"\n      />\n\n      <div className=\"flex flex-col items-center justify-center absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 gap-6\">\n        <h1 className=\"text-shadeswhite text-[34px] font-semibold text-center tracking-[-1.36px] leading-[40px]\">\n          Our Partners &amp; Tools\n        </h1>\n\n        <p className=\"w-[526px] text-shadeswhite text-[18px] font-normal text-center tracking-[0px] leading-[21.6px]\">\n          Powered by Industry-Leading Platforms.\n          <br />\n          We work with the most trusted tools and platforms in the GCC and\n          globally to ensure accurate tracking, effective testing, and scalable\n          growth.\n        </p>\n      </div>\n    </section>\n  );\n};\n","size_bytes":1075},"client/src/pages/sections/NodeSection.tsx":{"content":"import React from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nconst teamMembers = [\n  {\n    name: \"Mohamed Neamatalla\",\n    role: \"Founder & CEO\",\n    image: \"..//figmaAssets/frame-37644.png\",\n  },\n  {\n    name: \"Alia Mahran\",\n    role: \"Operation Manager\",\n    image: \"..//figmaAssets/frame-37641.png\",\n  },\n  {\n    name: \"Omar Maged\",\n    role: \"Tech Manager\",\n    image: \"..//figmaAssets/frame-37645.png\",\n  },\n  {\n    name: \"Alaa Abdullah\",\n    role: \"Quality Assurance\",\n    image: \"..//figmaAssets/frame-37646.png\",\n  },\n];\n\nexport const NodeSection = (): JSX.Element => {\n  return (\n    <section id=\"section-team\" className=\"w-full bg-dark-mode900 py-[100px] px-8\">\n      <div className=\"flex flex-col max-w-[1376px] mx-auto items-center gap-[60px]\">\n        <header className=\"flex flex-col items-center gap-6\">\n          <h1 className=\"text-shadeswhite text-[48px] font-semibold text-center tracking-[-1.92px] leading-[56px]\">\n            Meet The Team\n          </h1>\n\n          <p className=\"max-w-[986px] text-shadeswhite text-[20px] font-normal text-center tracking-[0px] leading-6\">\n            We&apos;re a hands-on team of CRO specialists with deep GCC market\n            knowledge and a proven track record. When you work with us, you work\n            directly with the experts driving your growth.\n          </p>\n        </header>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 w-full\">\n          {teamMembers.map((member, index) => (\n            <Card\n              key={index}\n              className=\"w-full h-[382px] rounded-xl overflow-hidden border-none bg-cover bg-center bg-no-repeat relative before:content-[''] before:absolute before:inset-0 before:p-px before:rounded-xl before:[background:linear-gradient(180deg,rgba(176,241,201,0.3)_0%,rgba(12,68,34,1)_100%)] before:[-webkit-mask:linear-gradient(#fff_0_0)_content-box,linear-gradient(#fff_0_0)] before:[-webkit-mask-composite:xor] before:[mask-composite:exclude] before:z-[1] before:pointer-events-none\"\n              style={{\n                backgroundImage: `url(${member.image}), linear-gradient(0deg,rgba(255,255,255,1) 0%,rgba(255,255,255,1) 100%)`,\n              }}\n            >\n              <CardContent className=\"flex flex-col w-[308px] items-center justify-center gap-3 p-6 absolute bottom-6 left-1/2 transform -translate-x-1/2 rounded-xl border-none backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] bg-[linear-gradient(180deg,rgba(176,241,201,0.3)_0%,rgba(6,35,17,1)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)] before:content-[''] before:absolute before:inset-0 before:p-px before:rounded-xl before:[background:linear-gradient(180deg,rgba(255,255,255,0.2)_0%,rgba(59,126,85,0)_100%)] before:[-webkit-mask:linear-gradient(#fff_0_0)_content-box,linear-gradient(#fff_0_0)] before:[-webkit-mask-composite:xor] before:[mask-composite:exclude] before:z-[1] before:pointer-events-none\">\n                <h3 className=\"text-shadeswhite text-[23px] font-semibold text-center tracking-[-0.46px] leading-[28px]\">\n                  {member.name}\n                </h3>\n\n                <p className=\"text-shadeswhite text-[16px] font-normal text-center tracking-[0px] leading-[19px]\">\n                  {member.role}\n                </p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n","size_bytes":3483},"client/src/pages/sections/OverviewSection.tsx":{"content":"\"use client\";\n\nimport React, { useState, useMemo } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nconst caseStudies = [\n  {\n    id: 1,\n    company: \"Ribal Magic\",\n    industry: \"Home Appliances Industry\",\n    market: \"Saudi Market\",\n    profileImage: \"/figmaAssets/profile-photo.svg\",\n    flagImage: \"/figmaAssets/saudi-arabia.svg\",\n    challenge:\n      \"PDPs failed to drive conversions\\nVisual clarity and structure were lacking\\nNo sense of urgency to purchase\\nUsers bounced before exploring products fully\",\n    hypothesis:\n      \"Improve visual clarity on PDPs\\nOrganize product info for easier reading\\nAdd scarcity & urgency triggers\\nAim to boost engagement and conversions\",\n    solution:\n      \"Enhanced imagery & layout for clarity\\nStructured benefits, features & reviews\\nAdded scarcity & urgency cues\\nStrengthened CTAs & streamlined checkout\",\n    results: [\n      { metric: \"+8.95%\", label: \"Conversion Rate\" },\n      { metric: \"+9.41%\", label: \"Revenue Growth\" },\n      { metric: \"+9.43%\", label: \"Products per Visitor\" },\n    ],\n    beforeImage: \"/figmaAssets/add-image-2.png\",\n    afterImage: \"/figmaAssets/add-image-3.png\",\n  },\n  {\n    id: 2,\n    company: \"Vitrine Furniture\",\n    industry: \"Furniture Industry\",\n    market: \"Egypt Market\",\n    profileImage: \"/figmaAssets/profile-photo-1.svg\",\n    flagImage: \"/figmaAssets/egypt.svg\",\n    challenge:\n      \"Users bypassing PLP showed higher conversion\\nPreference for faster, direct product access\\nHomepage buried products too deep\\nMissed chances to guide users to convert\",\n    hypothesis:\n      \"Surface products directly on homepage\\nSimplify and speed up user journey\\nEncourage stronger engagement\\nDrive higher conversions and revenue\",\n    solution:\n      'Increased product visibility with ratings & CTAs\\nOptimized categories for smoother browsing\\nAdded \"Best Sellers\" for social proof\\nUsed banners to highlight trending products',\n    results: [\n      { metric: \"+28.47%\", label: \"Conversion Rate\" },\n      { metric: \"+70.73%\", label: \"Revenue per Visitor\" },\n      { metric: \"+23.88%\", label: \"Products per Visitor\" },\n    ],\n    beforeImage: \"/figmaAssets/add-image-6.png\",\n    afterImage: \"/figmaAssets/add-image-7.png\",\n  },\n  {\n    id: 3,\n    company: \"Squadio\",\n    industry: \"Hiring Industry\",\n    market: \"Saudi Market\",\n    profileImage: \"/figmaAssets/profile-photo-5.svg\",\n    flagImage: \"/figmaAssets/saudi-arabia.svg\",\n    challenge:\n      \"Homepage not converting well\\nValue proposition unclear\\nNavigation distracted users\\nMissing trust signals led to drop-offs\",\n    hypothesis:\n      \"Clarified value proposition\\nSimplified navigation flow\\nBoosted CTA visibility\\nShowcased client credibility early\",\n    solution:\n      \"Clearer value proposition messaging\\nSimplified navigation (removed toggle)\\nEnhanced CTA design and copy\\nShowcased client logos above the fold\",\n    results: [\n      { metric: \"+44.02%\", label: \"Funnel Progression\" },\n      { metric: \"+4.33%\", label: \"Conversion Rate\" },\n      { metric: \"+6.49%\", label: \"Boost Engagement\" },\n    ],\n    beforeImage: \"/figmaAssets/add-image-10.png\",\n    afterImage: \"/figmaAssets/add-image-11.png\",\n  },\n  {\n    id: 4,\n    company: \"Regal Honey\",\n    industry: \"Honey Industry\",\n    market: \"Kuwait Market\",\n    profileImage: \"/figmaAssets/profile-photo-7.svg\",\n    flagImage: \"/figmaAssets/kuwait.svg\",\n    challenge:\n      \"Customers enjoyed browsing but hesitated to buy.\\nQuestions about honey's quality, source, and benefits.\\nKey info on product pages often went unnoticed.\\nSurveys showed low brand trust.\",\n    hypothesis:\n      \"Focused on transparency and authenticity\\nUsed engaging video content\\nAddressed customer questions upfront\\nAimed to build trust and boost confidence\",\n    solution:\n      \"Added short videos on product pages\\nShowed real factory and beehive footage\\nExplained ingredients, benefits, and uses\\nBuilt credibility through clear visuals\",\n    results: [\n      { metric: \"+6.4%\", label: \"Conversion Rate\" },\n      { metric: \"+8.03%\", label: \"Revenue per Visitor\" },\n      { metric: \"+6.42%\", label: \"Products per Visitor\" },\n    ],\n    beforeImage: \"/figmaAssets/add-image-14.png\",\n    afterImage: \"/figmaAssets/add-image-15.png\",\n  },\n];\n\nexport const OverviewSection = (): JSX.Element => {\n  // --- CHANGE: Initialize state with the ID of the LAST item ---\n  const [selectedStudyId, setSelectedStudyId] = useState(caseStudies[caseStudies.length - 1].id);\n\n  // This logic is now correct for both the initial state and interactions\n  const orderedCaseStudies = useMemo(() => {\n    const selected = caseStudies.find(s => s.id === selectedStudyId);\n    if (!selected) return []; \n    \n    const openIndex = caseStudies.findIndex(s => s.id === selectedStudyId);\n    const leftCards = caseStudies.slice(0, openIndex);\n    const rightCards = caseStudies.slice(openIndex + 1);\n\n    return [...leftCards, selected, ...rightCards];\n  }, [selectedStudyId]);\n\n  return (\n    <section id=\"section-case-studies\" className=\"w-full bg-dark-mode900 py-24 overflow-hidden\">\n      <div className=\"flex flex-col items-center gap-6 mb-16 px-4\">\n        <h1 className=\"font-semibold text-shadeswhite text-[48px] text-center tracking-[-1.92px] leading-[56px]\">\n          Case Studies\n        </h1>\n        <h2 className=\"font-semibold text-shadeswhite text-[34px] text-center tracking-[-1.36px] leading-[40px]\">\n          We Don&apos;t Guess. We Deliver.\n        </h2>\n        <p className=\"max-w-4xl font-normal text-shadeswhite text-[20px] text-center tracking-[0px] leading-6\">\n          Instead of relying on &quot;best practices&quot; or guesswork, every\n          change we make is backed by data, testing, and proven CRO strategies.\n          Here&apos;s a glimpse of the revenue and conversion growth we&apos;ve\n          created for stores like yours.\n        </p>\n      </div>\n\n      <div className=\"flex justify-center items-start gap-4 px-4 max-w-7xl mx-auto\">\n        {orderedCaseStudies.map((study) => {\n          const isSelected = study.id === selectedStudyId;\n\n          return (\n            <div\n              key={study.id}\n              onClick={() => !isSelected && setSelectedStudyId(study.id)}\n              className={`transition-all duration-700 ease-in-out ${\n                isSelected ? 'w-[1000px] flex-shrink-0' : 'w-[100px] flex-shrink-0'\n              }`}\n            >\n              {isSelected ? (\n                // --- OPEN CARD ---\n                <div className=\"w-full h-[800px] rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] bg-[linear-gradient(0deg,rgba(0,0,0,0.3)_0%,rgba(0,0,0,0.3)_100%),radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)]\">\n                  <CardContent className=\"p-6\">\n                    <Card className=\"rounded-xl border-none backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] bg-[linear-gradient(180deg,rgba(176,241,201,0.3)_0%,rgba(6,35,17,1)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)] before:content-[''] before:absolute before:inset-0 before:p-px before:rounded-xl before:[background:linear-gradient(180deg,rgba(255,255,255,0.2)_0%,rgba(59,126,85,0)_100%)] before:[-webkit-mask:linear-gradient(#fff_0_0)_content-box,linear-gradient(#fff_0_0)] before:[-webkit-mask-composite:xor] before:[mask-composite:exclude] before:z-[1] before:pointer-events-none relative\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-center gap-3\">\n                          <img className=\"w-16 h-16 object-contain\" alt=\"Profile photo\" src={study.profileImage} />\n                          <div className=\"flex-1 flex flex-col gap-2.5\">\n                            <h3 className=\"font-semibold text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px]\">\n                              {study.company}\n                            </h3>\n                            <Badge className=\"gap-2 px-3 py-1.5 rounded-[100px] bg-[#6ae49926] text-secondary-300 font-normal text-[14px] tracking-[0px] leading-[17px] w-fit\">\n                              {study.industry}\n                            </Badge>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <img className=\"w-8 h-8\" alt=\"Country flag\" src={study.flagImage} />\n                            <span className=\"font-semibold text-shadeswhite text-[16px] tracking-[0px] leading-[19px] whitespace-nowrap\">\n                              {study.market}\n                            </span>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                    <div className=\"flex gap-4 mt-6\">\n                      <div className=\"flex flex-col gap-3 w-[491px]\">\n                        {/* Challenge, Hypothesis, Solution, Results Cards */}\n                        {/* The Challenge */}\n                        <Card className=\"rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)]\">\n                          <CardContent className=\"p-5\">\n                            <h4 className=\"font-semibold text-secondary-200 text-[18px] tracking-[0px] leading-[21.6px] mb-2.5\">The Challenge:</h4>\n                            <p className=\"font-normal text-shadeswhite text-[14px] tracking-[0px] leading-[17px] whitespace-pre-line\">{study.challenge}</p>\n                          </CardContent>\n                        </Card>\n                         {/* Our Hypothesis */}\n                        <Card className=\"rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)]\">\n                          <CardContent className=\"p-5\">\n                            <h4 className=\"font-semibold text-secondary-200 text-[18px] tracking-[0px] leading-[21.6px] mb-2.5\">Our Hypothesis:</h4>\n                            <p className=\"font-normal text-shadeswhite text-[14px] tracking-[0px] leading-[17px] whitespace-pre-line\">{study.hypothesis}</p>\n                          </CardContent>\n                        </Card>\n                        {/* The Solution */}\n                        <Card className=\"rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)]\">\n                          <CardContent className=\"p-5\">\n                            <h4 className=\"font-semibold text-secondary-200 text-[18px] tracking-[0px] leading-[21.6px] mb-2.5\">The Solution:</h4>\n                            <p className=\"font-normal text-shadeswhite text-[14px] tracking-[0px] leading-[17px] whitespace-pre-line\">{study.solution}</p>\n                          </CardContent>\n                        </Card>\n                        {/* The Results */}\n                        <Card className=\"rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)]\">\n                          <CardContent className=\"p-5\">\n                            <h4 className=\"font-semibold text-secondary-200 text-[18px] tracking-[0px] leading-[21.6px] mb-2.5\">The Results:</h4>\n                            <div className=\"flex items-center gap-6\">\n                              {study.results.map((result, index) => (\n                                <div key={index} className=\"flex flex-col items-center gap-1.5\">\n                                  <span className=\"font-semibold text-secondary-500 text-[28px] text-center tracking-[-0.56px] leading-[33.6px]\">{result.metric}</span>\n                                  <span className=\"font-normal text-shadeswhite text-[14px] text-center tracking-[0px] leading-[17px]\">{result.label}</span>\n                                </div>\n                              ))}\n                            </div>\n                          </CardContent>\n                        </Card>\n                      </div>\n                      <Card className=\"w-[490px] rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)] relative\">\n                        <CardContent className=\"p-6\">\n                          <div className=\"flex gap-4 justify-center\">\n                            <div className=\"flex flex-col items-center gap-3\">\n                              <span className=\"font-semibold text-secondary-200 text-[18px] text-center tracking-[0px] leading-[21.6px]\">Before</span>\n                              <img className=\"w-[201px] h-[465px] rounded-[19.89px] border-[7.46px] border-solid border-[#4b5768] object-cover\" alt=\"Before image\" src={study.beforeImage} />\n                            </div>\n                            <div className=\"flex flex-col items-center gap-3\">\n                              <span className=\"font-semibold text-secondary-200 text-[18px] text-center tracking-[0px] leading-[21.6px]\">After</span>\n                              <img className=\"w-[201px] h-[465px] rounded-[19.89px] border-[7.46px] border-solid border-[#4b5768] object-cover\" alt=\"After image\" src={study.afterImage} />\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </CardContent>\n                </div>\n              ) : (\n                // --- CLOSED CARD ---\n                <div className=\"relative overflow-hidden w-full h-[800px] rounded-2xl border border-solid border-[#6ae49933] bg-transparent cursor-pointer hover:scale-105\">\n                  <div className=\"absolute inset-0 z-10\">\n                    <img className=\"absolute top-1/2 -translate-y-1/2 -left-1/2 w-[200px] h-auto rounded-lg border-2 border-solid border-[#4b5768] object-cover blur-sm\" alt=\"Before preview\" src={study.beforeImage} />\n                    <img className=\"absolute top-1/2 -translate-y-1/2 -right-1/2 w-[200px] h-auto rounded-lg border-2 border-solid border-[#4b5768] object-cover blur-sm\" alt=\"After preview\" src={study.afterImage} />\n                    <div className=\"absolute inset-0 bg-[#4d6655] opacity-80\"></div>\n                  </div>\n                  <CardContent className=\"relative z-20 p-4 h-full flex flex-col items-center justify-end gap-4\">\n                    <h3 className=\"font-heading-h6-semi-bold font-[number:var(--heading-h6-semi-bold-font-weight)] text-shadeswhite text-[length:var(--heading-h6-semi-bold-font-size)] tracking-[var(--heading-h6-semi-bold-letter-spacing)] leading-[var(--heading-h6-semi-bold-line-height)] [font-style:var(--heading-h6-semi-bold-font-style)] text-center writing-mode-vertical-rl text-orientation-mixed\">\n                      {study.company}\n                    </h3>\n                    <div className=\"w-16 h-16 rounded-full bg-white flex items-center justify-center\">\n                      <img className=\"w-14 h-14 object-contain rounded-full\" alt=\"Company logo\" src={study.profileImage} />\n                    </div>\n                  </CardContent>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};","size_bytes":16589},"client/src/pages/sections/ServicesSection.tsx":{"content":"\"use client\";\n\nimport React from \"react\";\nimport { motion, useScroll, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nconst servicesData = [\n  {\n    title: \"Ongoing CRO Programs\",\n    description: \"A continuous cycle of research, testing, and improvement that boost results over time.\",\n    topMask: \"/figmaAssets/mask-group-2.svg\",\n    bottomMask: \"/figmaAssets/mask-group-29.svg\",\n    position: \"top-[216px] left-[calc(50.00%_-_688px)]\",\n    animateFrom: { x: -200, y: 0 },\n  },\n  {\n    title: \"A/B Testing\",\n    description: \"Run systematic experiments to discover which design, copy, or flow converts best.\",\n    topMask: \"/figmaAssets/mask-group-18.svg\",\n    bottomMask: \"/figmaAssets/mask-group-71.svg\",\n    position: \"top-[216px] left-[calc(50.00%_+_258px)]\",\n    animateFrom: { x: 200, y: -100 },\n  },\n  {\n    title: \"GA4 Implementation & Tracking\",\n    description: \"Set up advanced tracking to measure every step of the customer journey.\",\n    topMask: \"/figmaAssets/mask-group-38.svg\",\n    bottomMask: \"/figmaAssets/mask-group-4.svg\",\n    position: \"top-[404px] left-[calc(50.00%_+_258px)]\",\n    titleWidth: \"w-[364px]\",\n    animateFrom: { x: 200, y: 150 },\n  },\n  {\n    title: \"CRO Audits\",\n    description: \"Analyze your funnel to spot leaks, friction points, and hidden opportunities.\",\n    topMask: \"/figmaAssets/mask-group-23.svg\",\n    bottomMask: \"/figmaAssets/mask-group-7.svg\",\n    position: \"top-[404px] left-[calc(50.00%_-_688px)]\",\n    animateFrom: { x: -200, y: 150 },\n  },\n  {\n    title: \"Landing Page Optimization\",\n    description: \"Design and refine landing pages built to maximize conversions.\",\n    topMask: \"/figmaAssets/mask-group-28.svg\",\n    bottomMask: \"/figmaAssets/mask-group-14.svg\",\n    position: \"top-[592px] left-[calc(50.00%_-_214px)]\",\n    animateFrom: { x: 0, y: 200 },\n  },\n];\n\nconst backgroundFrames = [\n    { className: \"top-[210px] left-[628px] w-[166px] h-[166px] rounded-[10.19px] bg-[url(/figmaAssets/frame-37613.png)] bg-cover\", animateFrom: { x: 0, y: -300, scale: 0.5 } },\n    { className: \"top-[367px] left-[558px] w-[175px] h-[175px] rounded-[10.77px] border border-solid border-[#ffffff33] rotate-[17.91deg] [background:url(/figmaAssets/frame-37614.png)_50%_50%_/_cover]\", animateFrom: { x: -250, y: 200, scale: 0.5 } },\n    { className: \"top-[262px] left-[534px] w-[178px] h-[178px] rounded-[10.98px] rotate-[-25.19deg] [background:url(/figmaAssets/frame-37617.png)_50%_50%_/_cover]\", animateFrom: { x: -300, y: 0, scale: 0.5 } },\n    { className: \"top-[367px] left-[740px] w-[175px] h-[175px] rounded-[10.76px] rotate-[34.12deg] bg-[url(/figmaAssets/frame-37618.png)] bg-cover\", animateFrom: { x: 250, y: 200, scale: 0.5 } },\n    { className: \"top-[236px] left-[710px] w-[187px] h-[187px] rounded-[11.51px] rotate-[-11.61deg] bg-[url(/figmaAssets/frame-37616.png)] bg-cover\", animateFrom: { x: 300, y: -200, scale: 0.5 } },\n];\n\n\nexport const ServicesSection = (): JSX.Element => {\n  const ref = useRef(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    // CORRECTED: Animation now completes when the top of the section reaches the top of the screen.\n    offset: [\"start end\", \"start start\"],\n  });\n\n  return (\n    <section id=\"section-services\" ref={ref} className=\"relative w-full min-h-[950px] bg-dark-mode900 pb-[200px]\">\n      {servicesData.map((service, index) => {\n        const x = useTransform(scrollYProgress, [0, 1], [service.animateFrom.x, 0]);\n        const y = useTransform(scrollYProgress, [0, 1], [service.animateFrom.y, 0]);\n        const opacity = useTransform(scrollYProgress, [0, 0.8], [0, 1]); // Fade in a little faster than the movement\n\n        return (\n            <motion.div\n              key={index}\n              id={`service-card-wrapper-${index}`}\n              style={{ x, y, opacity }}\n              className={`absolute ${service.position}`}\n            >\n              <Card id={`service-card-${index}`} className=\"flex flex-col w-[430px] items-start justify-center p-[9px] bg-[#ffffff03] rounded-3xl overflow-hidden border border-solid border-[#ffffff1a] shadow-[inset_0px_0px_0px_9px_#ffffff08]\">\n                <CardContent id={`service-card-content-${index}`} className=\"flex flex-col items-center justify-center gap-4 p-6 relative self-stretch w-full rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] bg-[radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)]\">\n                    <h3 id={`service-title-${index}`} className={`relative ${service.titleWidth || \"self-stretch\"} mt-[-1.00px] font-semibold text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px]`}>\n                        {service.title}\n                    </h3>\n                    <p id={`service-description-${index}`} className=\"relative self-stretch font-normal text-shadeswhite text-[16px] tracking-[0px] leading-[19px]\">\n                        {service.description}\n                    </p>\n                    <img id={`service-top-mask-${index}`} className=\"absolute top-0 right-[57px] w-[180px] h-2\" alt=\"Mask group\" src={service.topMask}/>\n                    <img id={`service-bottom-mask-${index}`} className=\"absolute left-[57px] bottom-[-7px] w-[180px] h-2\" alt=\"Mask group\" src={service.bottomMask}/>\n                </CardContent>\n              </Card>\n            </motion.div>\n        );\n      })}\n\n      <Button \n        id=\"services-cta-button\" \n        className=\"px-5 py-3.5 absolute top-[760px] left-[calc(50.00%_-_149px)] border border-solid border-[#6ae499] inline-flex items-center justify-center gap-2 rounded h-auto bg-transparent hover:bg-transparent hover:text-secondary-500\"\n        onClick={() => {\n          document.getElementById('section-feature-process')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }}\n      >\n        <span id=\"services-cta-button-text\" className=\"font-semibold text-[18px] text-secondary-500 tracking-[0px] leading-[21.6px]\">\n          See How Our Process Works\n        </span>\n      </Button>\n\n      <header id=\"services-header\" className=\"flex w-[870px] items-center absolute top-[60px] left-[calc(50.00%_-_434px)] flex-col gap-6\">\n        <h1 id=\"services-title\" className=\"relative self-stretch mt-[-1.00px] font-semibold text-shadeswhite text-center text-[48px] tracking-[-1.92px] leading-[56px]\">\n          Our Services\n        </h1>\n      </header>\n\n      {backgroundFrames.map((frame, index) => {\n        const x = useTransform(scrollYProgress, [0, 1], [frame.animateFrom.x, 0]);\n        const y = useTransform(scrollYProgress, [0, 1], [frame.animateFrom.y, 0]);\n        const scale = useTransform(scrollYProgress, [0, 1], [frame.animateFrom.scale, 1]);\n        const opacity = useTransform(scrollYProgress, [0, 0.8], [0, 1]);\n\n        return (\n            <motion.div\n              key={index}\n              id={`services-bg-frame-${index}`}\n              style={{ x, y, scale, opacity }}\n              className={`absolute ${frame.className}`}\n            />\n        );\n      })}\n    </section>\n  );\n};","size_bytes":7240},"client/src/pages/sections/StatisticsSection.tsx":{"content":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport const StatisticsSection = (): JSX.Element => {\n  return (\n    <>\n\n      <section className=\"flex flex-col items-start gap-2 px-0 py-[100px] relative self-stretch w-full flex-[0_0_auto]\">\n        <div className=\"relative w-full h-[546px] bg-[#131612]\">\n          <img\n            className=\"absolute top-[102px] left-[596px] w-[844px] h-[348px]\"\n            alt=\"Sicky bar\"\n            src=\"/figmaAssets/sicky-bar.png\"\n          />\n\n          <div className=\"flex flex-col w-[665px] items-start justify-center gap-8 absolute top-20 left-[60px] rounded-xl\">\n            <h2 className=\"relative self-stretch mt-[-1.00px] text-white text-[48px] font-semibold tracking-[-1.92px] leading-[56px]\">\n              Let&apos;s Turn More Visitors Into Buyers\n            </h2>\n\n            <p className=\"relative self-stretch text-white text-[20px] font-normal tracking-[0px] leading-6\">\n              Book your free strategy session today.\n              <br /> We&apos;ll audit your store, uncover where revenue is\n              leaking, and create a custom conversion plan designed for your\n              growth.\n            </p>\n\n            <Button \n              className=\"inline-flex items-center justify-center gap-2 px-5 py-3.5 relative flex-[0_0_auto] bg-secondary-500 rounded h-auto hover:bg-secondary-500\"\n              onClick={() => {\n                document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n              }}\n            >\n              <span className=\"relative w-fit mt-[-1.00px] text-neutral-900 text-[18px] font-semibold tracking-[0px] leading-[21.6px] whitespace-nowrap\">\n                Book My Free Strategy Session\n              </span>\n            </Button>\n\n            <p className=\"relative self-stretch text-white text-[20px] font-semibold tracking-[0px] leading-6\">\n              100% free. No obligation. Actionable insights guaranteed.\n            </p>\n          </div>\n\n          {/* Video container */}\n          <div className=\"absolute top-[calc(50.00%_-_229px)] left-[825px] w-[515px] h-[458px] flex justify-center items-center overflow-hidden rounded-[24px] border-[3px] border-[#2d5f3e]\">\n            <video\n              className=\"w-full h-full object-cover rounded-[20px]\"\n              autoPlay\n              muted\n              loop\n              playsInline\n            >\n              <source src=\"https://core.optimizers.agency/wp-content/uploads/2025/09/video-4.mp4\" type=\"video/mp4\" />\n              Your browser does not support the video tag.\n            </video>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n","size_bytes":2737},"client/src/pages/sections/TestimonialsSection.tsx":{"content":"\"use client\";\n\nimport React, { useState, useMemo } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { InlineWidget } from \"react-calendly\";\n\n// Validation functions\nconst validateWebsite = (url: string): string => {\n  if (!url.trim()) return \"\";\n  \n  // Try to add protocol if missing\n  let urlToValidate = url.trim();\n  if (!urlToValidate.startsWith('http://') && !urlToValidate.startsWith('https://')) {\n    urlToValidate = 'https://' + urlToValidate;\n  }\n  \n  try {\n    const urlObj = new URL(urlToValidate);\n    // Check if it has a valid domain\n    if (!urlObj.hostname.includes('.')) {\n      return \"Please enter a valid website URL\";\n    }\n    return \"\";\n  } catch {\n    return \"Please enter a valid website URL\";\n  }\n};\n\nconst validateEmail = (email: string): string => {\n  if (!email.trim()) return \"\";\n  \n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(email)) {\n    return \"Please enter a valid email address\";\n  }\n  return \"\";\n};\n\n// Main Component\nexport const TestimonialsSection = (): JSX.Element => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [showThankYouMessage, setShowThankYouMessage] = useState(false);\n  const [formData, setFormData] = useState({\n    conversionVolume: \"\",\n    primaryObjective: \"\",\n    website: \"\",\n    firstName: \"\",\n    email: \"\",\n    scheduleDate: null as Date | null,\n  });\n  \n  const [validationErrors, setValidationErrors] = useState({\n    website: \"\",\n    email: \"\",\n  });\n\n  const handleNext = () => {\n    if (currentStep < 5) {\n      setCurrentStep((prev) => prev + 1);\n    }\n  };\n\n  const handleBack = () => {\n    if (currentStep > 1) {\n      setCurrentStep((prev) => prev - 1);\n    }\n  };\n\n  const handleSelect = (field: string, value: string) => {\n    setFormData((prev) => ({ ...prev, [field]: value }));\n    \n    // Check if user selected \"Fewer Than 100\" in step 1\n    if (currentStep === 1 && value === \"Fewer Than 100\") {\n      setTimeout(() => {\n        setShowThankYouMessage(true);\n      }, 300);\n      return;\n    }\n    \n    // Auto-advance for steps 1 and 2\n    if (currentStep === 1 || currentStep === 2) {\n      setTimeout(() => {\n        handleNext();\n      }, 300);\n    }\n  };\n  \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n    \n    // Validate on change\n    if (name === \"website\") {\n      setValidationErrors((prev) => ({ ...prev, website: validateWebsite(value) }));\n    } else if (name === \"email\") {\n      setValidationErrors((prev) => ({ ...prev, email: validateEmail(value) }));\n    }\n  };\n  \n  const stepperData = useMemo(() => [\n      { number: 1, title: \"Conversions\", subtitle: \"Conversion Volume\" },\n      { number: 2, title: \"Objective\", subtitle: \"Business Objective\" },\n      { number: 3, title: \"Website\", subtitle: \"Website\" },\n      { number: 4, title: \"Contact\", subtitle: \"Contact Details\" },\n      { number: 5, title: \"Schedule\", subtitle: \"Schedule\" },\n    ].map(step => ({\n      ...step,\n      isActive: step.number <= currentStep,\n      isCurrent: step.number === currentStep,\n    })), [currentStep]);\n\n  const isNextDisabled = () => {\n    switch (currentStep) {\n      case 1: return !formData.conversionVolume;\n      case 2: return !formData.primaryObjective;\n      case 3: return !formData.website || !!validationErrors.website;\n      case 4: return !formData.firstName || !formData.email || !!validationErrors.email;\n      default: return false; // Always enabled on final step\n    }\n  };\n\n  const renderStepContent = () => {\n    switch (currentStep) {\n      case 1:\n        return <Step1_Conversions selectedOption={formData.conversionVolume} onSelect={(value) => handleSelect(\"conversionVolume\", value)} />;\n      case 2:\n        return <Step2_Objective selectedOption={formData.primaryObjective} onSelect={(value) => handleSelect(\"primaryObjective\", value)} />;\n      case 3:\n        return <Step3_Website value={formData.website} onChange={handleInputChange} error={validationErrors.website} />;\n      case 4:\n        return <Step4_Contact values={formData} onChange={handleInputChange} emailError={validationErrors.email} />;\n      case 5:\n        return <Step5_Schedule prefill={{ email: formData.email, name: formData.firstName }} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <section id=\"testimonials-booking-section\" className=\"relative w-full bg-dark-mode900 py-[100px]\">\n      <div className=\"flex flex-col items-center gap-[60px] max-w-[1176px] mx-auto px-4\">\n        <header className=\"flex flex-col items-center gap-6\">\n          <h1 className=\"text-shadeswhite text-[48px] font-semibold text-center tracking-[-1.92px] leading-[56px]\">\n            Book Your Free Strategy Session\n          </h1>\n        </header>\n\n        {showThankYouMessage ? (\n          <Card className=\"w-full max-w-[1176px] bg-[#ffffff0a] rounded-3xl border border-solid border-[#ffffff1a] shadow-[0px_0px_16px_10px_#6ae4991a] p-3\">\n            <CardContent className=\"flex flex-col items-center gap-8 px-6 py-16 rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] bg-[linear-gradient(0deg,rgba(0,0,0,0.3)_0%,rgba(0,0,0,0.3)_100%),radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)] h-[650px]\">\n              <h2 className=\"text-shadeswhite text-[34px] font-semibold text-center tracking-[-1.36px] leading-[40px]\">\n                Thank you\n              </h2>\n              <p className=\"text-shadeswhite text-center max-w-[700px] text-[20px] font-normal tracking-[0px] leading-6\">\n                Thank you for your interest in Optimizers. Unfortunately, given the current low conversion volume of your business, our services might not be the optimal fit at this time. We sincerely wish you all the best in your endeavors.\n              </p>\n              <p className=\"text-shadeswhite text-center max-w-[700px] text-[20px] font-normal tracking-[0px] leading-6\">\n                Please don't hesitate to reach out again in the future should your situation change. We would be more than happy to reassess how we can assist you then.\n              </p>\n            </CardContent>\n          </Card>\n        ) : (\n          <Card className=\"w-full max-w-[1176px] bg-[#ffffff0a] rounded-3xl border border-solid border-[#ffffff1a] shadow-[0px_0px_16px_10px_#6ae4991a] p-3\">\n            <CardContent className=\"flex flex-col items-center gap-[60px] px-6 py-8 rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] bg-[linear-gradient(0deg,rgba(0,0,0,0.3)_0%,rgba(0,0,0,0.3)_100%),radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)] h-[650px]\">\n              <nav className=\"flex items-start w-full rounded-md relative\">\n                {stepperData.map((step) => (\n                  <div key={step.number} className=\"flex flex-col items-center justify-center gap-2.5 px-6 py-4 flex-1\">\n                    <div className=\"flex items-center gap-4 w-full\">\n                      <div className={`flex w-5 h-5 items-center justify-center rounded-full border border-solid ${step.isCurrent ? 'border-[#6ae499]' : step.isActive ? 'border-neutral-400' : 'border-neutral-600'}`}>\n                        <span className={`text-xs ${step.isCurrent ? 'text-secondary-500' : step.isActive ? 'text-neutral-400' : 'text-neutral-600'}`}>\n                          {step.number}\n                        </span>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className={`text-[14px] font-normal ${step.isCurrent ? 'text-secondary-500' : step.isActive ? 'text-neutral-400' : 'text-neutral-600'}`}>\n                          {step.title}\n                        </span>\n                        <span className={`text-[12px] font-normal ${step.isCurrent ? 'text-secondary-500' : step.isActive ? 'text-neutral-400' : 'text-neutral-600'}`}>\n                          {step.subtitle}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </nav>\n\n              {renderStepContent()}\n\n              <div className=\"flex items-center gap-4 min-h-[44px]\">\n                {currentStep > 1 && (\n                  <Button onClick={handleBack} variant=\"outline\" className=\"px-5 py-3.5 border-[#a0abbb] text-[#a0abbb] hover:bg-neutral-700 hover:text-white\">\n                    Back\n                  </Button>\n                )}\n                {currentStep >= 3 && currentStep < 5 && (\n                  <Button onClick={handleNext} disabled={isNextDisabled()} className=\"px-5 py-3.5 border border-solid border-[#6ae499] bg-transparent hover:bg-[#6ae499]/10 disabled:border-neutral-600 disabled:text-neutral-600 disabled:cursor-not-allowed\">\n                    <span className=\"font-semibold text-secondary-500\">\n                      Next\n                    </span>\n                  </Button>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// --- Step Components (1-4 are unchanged) ---\nconst Step1_Conversions = ({ selectedOption, onSelect }: { selectedOption: string; onSelect: (value: string) => void; }) => {\n  const options = [\"Fewer Than 100\", \"From 100 to 1K\", \"From 100 to 10K\", \"10K+\"];\n  return (\n    <div className=\"flex flex-col items-center gap-10 w-full\">\n      <h2 className=\"text-shadeswhite text-[34px] font-semibold text-center tracking-[-1.36px] leading-[40px]\">Number of conversions per MONTH on average?</h2>\n      <div className=\"grid grid-cols-2 gap-6\">\n        {options.map((text) => (\n          <SelectableCard key={text} text={text} isSelected={selectedOption === text} onSelect={() => onSelect(text)} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Step2_Objective = ({ selectedOption, onSelect }: { selectedOption: string; onSelect: (value: string) => void; }) => {\n  const options = [\n    { title: \"Signups\", subtitle: \"(SaaS/eLearning)\" },\n    { title: \"Online Sales\", subtitle: \"(eCommerce)\" },\n    { title: \"Lead Gen\", subtitle: \"(Professional Services)\" },\n    { title: \"Other\", subtitle: \"\" },\n  ];\n  return (\n    <div className=\"flex flex-col items-center gap-10 w-full\">\n      <h2 className=\"text-shadeswhite text-[34px] font-semibold text-center tracking-[-1.36px] leading-[40px]\">What is your primary conversion objective?</h2>\n      <div className=\"grid grid-cols-2 gap-6\">\n        {options.map((opt) => (\n          <SelectableCard key={opt.title} text={opt.title} subtitle={opt.subtitle} isSelected={selectedOption === opt.title} onSelect={() => onSelect(opt.title)} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Step3_Website = ({ value, onChange, error }: { value: string; onChange: (e: React.ChangeEvent<HTMLInputElement>) => void; error: string; }) => {\n  return (\n    <div className=\"flex flex-col items-center gap-10 w-full max-w-md\">\n      <h2 className=\"text-shadeswhite text-[34px] font-semibold text-center tracking-[-1.36px] leading-[40px]\">What is your website?</h2>\n      <div className=\"w-full text-left\">\n          <label className=\"text-[12px] font-normal text-neutral-300 mb-2 block\">Your Website URL</label>\n          <Input \n            name=\"website\" \n            value={value} \n            onChange={onChange} \n            placeholder=\"https://yourwebsite.com\" \n            className={`bg-neutral-800 text-white placeholder:text-neutral-500 rounded-lg ${error ? 'border-red-500' : 'border-neutral-600'}`}\n          />\n          {error ? (\n            <p className=\"text-xs text-red-500 mt-2\">{error}</p>\n          ) : (\n            <p className=\"text-xs text-neutral-400 mt-2\">Please enter a valid URL with or without http/https.</p>\n          )}\n      </div>\n    </div>\n  );\n};\n\nconst Step4_Contact = ({ values, onChange, emailError }: { values: { firstName: string, email: string }; onChange: (e: React.ChangeEvent<HTMLInputElement>) => void; emailError: string; }) => {\n  return (\n    <div className=\"flex flex-col items-center gap-10 w-full max-w-md\">\n        <h2 className=\"text-shadeswhite text-[34px] font-semibold text-center tracking-[-1.36px] leading-[40px]\">Contact Information</h2>\n        <div className=\"w-full flex flex-col gap-6\">\n            <div className=\"w-full text-left\">\n                <label className=\"text-[12px] font-normal text-neutral-300 mb-2 block\">First Name</label>\n                <Input name=\"firstName\" value={values.firstName} onChange={onChange} placeholder=\"First Name\" className=\"bg-neutral-800 border-neutral-600 text-white placeholder:text-neutral-500 rounded-lg\"/>\n            </div>\n            <div className=\"w-full text-left\">\n                <label className=\"text-[12px] font-normal text-neutral-300 mb-2 block\">Email</label>\n                <Input \n                  name=\"email\" \n                  value={values.email} \n                  onChange={onChange} \n                  type=\"email\" \n                  placeholder=\"Email\" \n                  className={`bg-neutral-800 text-white placeholder:text-neutral-500 rounded-lg ${emailError ? 'border-red-500' : 'border-neutral-600'}`}\n                />\n                {emailError && (\n                  <p className=\"text-xs text-red-500 mt-2\">{emailError}</p>\n                )}\n            </div>\n        </div>\n    </div>\n  );\n};\n\n// --- REVAMPED Step 5 with YOUR Calendly Link ---\nconst Step5_Schedule = ({ prefill }: { prefill: { name: string, email: string } }) => {\n  return (\n    <div className=\"flex flex-col items-center gap-6 w-full\">\n      <h2 className=\"text-shadeswhite text-[34px] font-semibold text-center tracking-[-1.36px] leading-[40px]\">Schedule Your Strategy Call</h2>\n      <div className=\"w-full min-h-[700px]\">\n        <InlineWidget\n          url=\"https://calendly.com/neamatalla/60min\"\n          styles={{ height: '700px', width: '100%' }}\n          prefill={prefill}\n          pageSettings={{\n            backgroundColor: '1a1a1a',\n            hideEventTypeDetails: false,\n            hideLandingPageDetails: false,\n            primaryColor: '6ae499',\n            textColor: 'ffffff',\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\n// --- Reusable Helper Component ---\nconst SelectableCard = ({ text, subtitle, isSelected, onSelect }: { text: string; subtitle?: string; isSelected: boolean; onSelect: () => void; }) => (\n  <Card\n    onClick={onSelect}\n    className={`w-[300px] h-[150px] rounded-2xl border border-solid transition-colors cursor-pointer flex items-center justify-center text-center p-6\n    ${isSelected ? \"border-[#6ae499] bg-[#6ae499]/10\" : \"border-[#6ae49933] bg-transparent hover:border-[#6ae499]\"}\n    [background:radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.08)_0%,rgba(255,255,255,0.08)_100%)]`}\n  >\n    <div className=\"flex flex-col\">\n      <span className=\"text-shadeswhite text-[18px] font-normal\">{text}</span>\n      {subtitle && <span className=\"text-neutral-400 text-sm\">{subtitle}</span>}\n    </div>\n  </Card>\n);","size_bytes":15411},"client/src/pages/sections/WhatWeDoSection.tsx":{"content":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { CardContent } from \"@/components/ui/card\";\nimport { motion, useScroll, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\n\nconst serviceCards = [\n  {\n    title: \"A/B Tests\",\n    description:\n      \"Experimentation projects to validate key hypotheses and identify what drives conversions\",\n    topMask: \"/figmaAssets/mask-group-19.svg\",\n    bottomMask: \"/figmaAssets/mask-group-24.svg\",\n    backgroundImage: \"\",\n  },\n  {\n    title: \"Monitor & Audit Funnels\",\n    description:\n      \"Catch leaks early and ensure your store runs at peak performance\",\n    topMask: \"/figmaAssets/mask-group-22.svg\",\n    bottomMask: \"/figmaAssets/mask-group-16.svg\",\n    backgroundImage:\n      \"url(../figmaAssets/background-overlay-border-overlayblur.png)\",\n  },\n  {\n    title: \"Optimize Landing Pages\",\n    description:\n      \"Design and test landing pages that maximize conversions, tailored for Arabic and GCC audiences\",\n    topMask: \"/figmaAssets/mask-group-56.svg\",\n    bottomMask: \"/figmaAssets/mask-group-3.svg\",\n    backgroundImage: \"\",\n  },\n  {\n    title: \"Data-Driven Design (UI/UX)\",\n    description:\n      \"Designs built for customers, rooted in analytics, consumer psychology, and Arabic UX best practices\",\n    topMask: \"/figmaAssets/mask-group-32.svg\",\n    bottomMask: \"/figmaAssets/mask-group-15.svg\",\n    backgroundImage: \"\",\n  },\n  {\n    title: \"Pre-Test Analysis\",\n    description: \"Uncover opportunities before launching A/B tests\",\n    topMask: \"/figmaAssets/mask-group-30.svg\",\n    bottomMask: \"/figmaAssets/mask-group-25.svg\",\n    backgroundImage:\n      \"url(../figmaAssets/background-overlay-border-overlayblur-1.png)\",\n  },\n  {\n    title: \"Heuristic Research & Competitive Analysis\",\n    description:\n      \"Expert insights into user behavior and competitor benchmarks to guide smarter decisions\",\n    topMask: \"/figmaAssets/mask-group-12.svg\",\n    bottomMask: \"/figmaAssets/mask-group-35.svg\",\n    backgroundImage: \"\",\n  },\n  {\n    title: \"Deliver Ongoing Insights\",\n    description:\n      \"Share experiment scorecards, growth reports, and actionable learnings\",\n    topMask: \"/figmaAssets/mask-group-58.svg\",\n    bottomMask: \"/figmaAssets/mask-group-27.svg\",\n    backgroundImage:\n      \"url(../figmaAssets/background-overlay-border-overlayblur-2.png)\",\n  },\n  {\n    title: \"Ensure Accurate Tracking\",\n    description:\n      \"Accurate setup and tracking of GA4 and other analytics setups to measure performance across your entire funnel\",\n    topMask: \"/figmaAssets/mask-group-31.svg\",\n    bottomMask: \"/figmaAssets/mask-group-33.svg\",\n    backgroundImage:\n      \"url(../figmaAssets/background-overlay-border-overlayblur-3.png)\",\n  },\n];\n\nexport const WhatWeDoSection = (): JSX.Element => {\n  const ref = useRef(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    // CORRECTED: The animation is now spread over a longer scroll duration, making it feel later.\n    offset: [\"start end\", \"end end\"],\n  });\n\n  return (\n    <section ref={ref} id=\"section-what-we-do\" className=\"w-full bg-dark-mode900 pt-[200px] pb-[200px] px-8\">\n      <div id=\"what-we-do-header\" className=\"max-w-[870px] mx-auto flex flex-col items-center gap-[60px] mb-[60px]\">\n        <h1 id=\"what-we-do-title\" className=\"font-semibold text-shadeswhite text-[48px] text-center tracking-[-1.92px] leading-[56px]\">\n          What We Do\n        </h1>\n        <h2 id=\"what-we-do-subtitle\" className=\"font-semibold text-shadeswhite text-[34px] text-center tracking-[-1.36px] leading-[40px]\">\n          Ongoing CRO Programs — The Engine of Growth\n        </h2>\n        <p id=\"what-we-do-description\" className=\"[font-family:'Sora',Helvetica] font-normal text-shadeswhite text-[20px] text-center tracking-[0] leading-6\">\n          <span className=\"leading-6\">The biggest wins come from </span>\n          <span className=\"font-semibold leading-6\">\n            a continuous cycle of research, testing, and improvement{\" \"}\n          </span>\n          <span className=\"leading-6\">\n            that compounds results over time. Our retainers give GCC e-commerce\n            brands{\" \"}\n          </span>\n          <span className=\"font-semibold leading-6\">\n            a dedicated CRO team\n          </span>\n          <span className=\"leading-6\"> that works month after month to:</span>\n        </p>\n      </div>\n\n      <div id=\"what-we-do-services-grid-1\" className=\"max-w-[1376px] mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\n        {serviceCards.slice(0, 4).map((card, index) => {\n          const start = index * 0.1;\n          const end = start + 0.25;\n\n          const rotateY = useTransform(scrollYProgress, [start, end], [90, 0]);\n          const opacity = useTransform(scrollYProgress, [start, end], [0, 1]);\n\n          return (\n            <motion.div\n              key={index}\n              id={`what-we-do-card-${index}`}\n              className=\"w-full bg-[#6ae4990a] rounded-3xl overflow-hidden border border-solid border-[#ffffff1a] shadow-[inset_0px_0px_0px_9px_#ffffff08] p-[9px]\"\n              style={{\n                rotateY,\n                opacity,\n                perspective: 1000,\n                transformStyle: \"preserve-3d\",\n              }}\n            >\n              <CardContent\n                className={`flex flex-col items-start justify-center gap-4 p-6 relative w-full h-full rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] ${card.backgroundImage ? 'has-background-image' : ''}`}\n                style={{\n                  background: card.backgroundImage\n                    ? \"radial-gradient(50% 50% at 50% 0%, rgba(168,127,255,0.04) 0%, rgba(168,127,255,0) 100%), linear-gradient(0deg, rgba(255,255,255,0.05) 0%, rgba(255,255,255,0.05) 100%)\"\n                    : \"radial-gradient(50% 50% at 50% 0%, rgba(168,127,255,0.04) 0%, rgba(168,127,255,0) 100%), linear-gradient(0deg, rgba(255,255,255,0.05) 0%, rgba(255,255,255,0.05) 100%)\",\n                  '--bg-image': card.backgroundImage ? `${card.backgroundImage}` : 'none'\n                } as React.CSSProperties & { '--bg-image': string }}\n              >\n                <h3 className=\"font-semibold text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px] text-left\">\n                  {card.title}\n                </h3>\n                <p className=\"font-normal text-shadeswhite text-[16px] tracking-[0px] leading-[19px] text-left\">\n                  {card.description}\n                </p>\n                <img className=\"absolute top-0 right-[57px] w-[180px] h-2\" alt=\"Mask group\" src={card.topMask} />\n                <img className=\"absolute left-[57px] bottom-[-7px] w-[180px] h-2\" alt=\"Mask group\" src={card.bottomMask} />\n              </CardContent>\n            </motion.div>\n          );\n        })}\n      </div>\n\n      <div id=\"what-we-do-services-grid-2\" className=\"max-w-[1376px] mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-[60px]\">\n        {serviceCards.slice(4, 8).map((card, index) => {\n          const i = index + 4;\n          const start = i * 0.1;\n          const end = start + 0.25;\n\n          const rotateY = useTransform(scrollYProgress, [start, end], [90, 0]);\n          const opacity = useTransform(scrollYProgress, [start, end], [0, 1]);\n          return (\n            <motion.div\n              key={i}\n              id={`what-we-do-card-${i}`}\n              className=\"w-full bg-[#6ae4990a] rounded-3xl overflow-hidden border border-solid border-[#ffffff1a] shadow-[inset_0px_0px_0px_9px_#ffffff08] p-[9px]\"\n              style={{\n                rotateY,\n                opacity,\n                perspective: 1000,\n                transformStyle: \"preserve-3d\",\n              }}\n            >\n              <CardContent\n                className={`flex flex-col items-start justify-center gap-4 p-6 relative w-full h-full rounded-2xl border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] ${card.backgroundImage ? 'has-background-image' : ''}`}\n                style={{\n                  background: card.backgroundImage\n                    ? \"radial-gradient(50% 50% at 50% 0%, rgba(168,127,255,0.04) 0%, rgba(168,127,255,0) 100%), linear-gradient(0deg, rgba(255,255,255,0.05) 0%, rgba(255,255,255,0.05) 100%)\"\n                    : \"radial-gradient(50% 50% at 50% 0%, rgba(168,127,255,0.04) 0%, rgba(168,127,255,0) 100%), linear-gradient(0deg, rgba(255,255,255,0.05) 0%, rgba(255,255,255,0.05) 100%)\",\n                  '--bg-image': card.backgroundImage ? `${card.backgroundImage}` : 'none'\n                } as React.CSSProperties & { '--bg-image': string }}\n              >\n                <h3 className=\"font-semibold text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px] text-left\">\n                  {card.title}\n                </h3>\n                <p className=\"font-normal text-shadeswhite text-[16px] tracking-[0px] leading-[19px] text-left\">\n                  {card.description}\n                </p>\n                <img className=\"absolute top-0 right-[57px] w-[180px] h-2\" alt=\"Mask group\" src={card.topMask} />\n                <img className=\"absolute left-[57px] bottom-[-7px] w-[180px] h-2\" alt=\"Mask group\" src={card.bottomMask} />\n              </CardContent>\n            </motion.div>\n          );\n        })}\n      </div>\n\n      <div id=\"what-we-do-cta-section\" className=\"flex justify-center\">\n        <Button \n          id=\"what-we-do-cta-button\" \n          className=\"px-5 py-3.5 bg-secondary-500 text-neutral-900 font-semibold text-[18px] tracking-[0px] leading-[21.6px] rounded h-auto hover:bg-secondary-500\"\n          onClick={() => {\n            document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n          }}\n        >\n          Talk to a CRO Expert\n        </Button>\n      </div>\n    </section>\n  );\n};","size_bytes":10072},"client/src/pages/sections/WhyChooseUsSection.tsx":{"content":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { CardContent } from \"@/components/ui/card\";\nimport { motion, useScroll, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\n\nexport const WhyChooseUsSection = (): JSX.Element => {\n  const ref = useRef(null);\n  const { scrollYProgress } = useScroll({\n    target: ref,\n    offset: [\"start end\", \"start start\"],\n  });\n\n  // This new motion value completes when the original scrollYProgress is at 95%\n  const adjustedProgress = useTransform(scrollYProgress, [0, 0.65], [0, 1]);\n\n  const featureCards = [\n    {\n      title: \"Proven Track Record\",\n      description: (\n        <>\n          <span className=\"text-white font-normal text-[16px] leading-[19px]\">\n            8+ years helping brands achieve an average{\" \"}\n          </span>\n          <span className=\"font-semibold text-white text-[16px] leading-[19px] tracking-[0px]\">\n            35% lift in conversion rates.\n          </span>\n        </>\n      ),\n      height: \"h-[221px]\",\n      topMask: \"/figmaAssets/mask-group-21.svg\",\n      bottomMask: \"/figmaAssets/mask-group-13.svg\",\n      icon: \"/figmaAssets/group.png\",\n      iconClasses: \"w-[42.40%] h-[47.96%] top-[44.34%] left-[52.55%]\",\n      blurElement: \"top-5 left-28\",\n      descriptionWidth: \"self-stretch\",\n    },\n    {\n      title: \"Specialized Expertise\",\n      description: (\n        <>\n          <span className=\"text-white font-normal text-[16px] leading-[19px]\">\n            Certified CRO specialists with deep understanding of{\" \"}\n          </span>\n          <span className=\"font-semibold text-white text-[16px] leading-[19px] tracking-[0px]\">\n            Arabic users, cultural nuances, and GCC market behavior.\n          </span>\n        </>\n      ),\n      height: \"h-[340px]\",\n      topMask: \"/figmaAssets/mask-group-17.svg\",\n      bottomMask: \"/figmaAssets/mask-group-6.svg\",\n      icon: \"/figmaAssets/group-1.png\",\n      iconClasses: \"w-[30.09%] h-[33.82%] top-[61.69%] left-[64.96%]\",\n      blurElement: \"top-[139px] left-28\",\n      descriptionWidth: \"w-[194px]\",\n    },\n    {\n      title: \"100% Guarantee\",\n      description: (\n        <>\n          <span className=\"text-white font-normal text-[16px] leading-[19px]\">\n            If we don&apos;t improve your conversions,{\" \"}\n          </span>\n          <span className=\"font-semibold text-white text-[16px] leading-[19px] tracking-[0px]\">\n            you don&apos;t <br />\n            pay.\n          </span>\n        </>\n      ),\n      height: \"h-[221px]\",\n      topMask: \"/figmaAssets/mask-group-9.svg\",\n      bottomMask: \"/figmaAssets/mask-group-48.svg\",\n      icon: \"/figmaAssets/group-2.png\",\n      iconClasses: \"top-[91px] left-[177px] w-[126px] h-[121px]\",\n      blurElement: \"top-5 left-28\",\n      descriptionWidth: \"self-stretch\",\n    },\n    {\n      title: \"Fastest Setup, Continuous Growth\",\n      description: (\n        <>\n          <span className=\"text-white font-normal text-[16px] leading-[19px]\">\n            Your first experiments live in just{\" \"}\n          </span>\n          <span className=\"font-semibold text-white text-[16px] leading-[19px] tracking-[0px]\">\n            14 days\n          </span>\n          <span className=\"text-white font-normal text-[16px] leading-[19px]\">\n            , <br />\n            with ongoing <br />\n            testing cycles for sustained impact\n          </span>\n          <span className=\"text-white font-normal text-[16px] leading-[19px]\">.</span>\n        </>\n      ),\n      height: \"h-[340px]\",\n      topMask: \"/figmaAssets/mask-group-11.svg\",\n      bottomMask: \"/figmaAssets/mask-group-8.svg\",\n      icon: \"/figmaAssets/startup-bar-chart-streamline-ux.svg\",\n      iconClasses:\n        \"w-[37.26%] top-[calc(50.00%_+_41px)] left-[58.50%] h-[117px]\",\n      blurElement: \"top-[139px] left-28\",\n      descriptionWidth: \"w-[204px]\",\n    },\n  ];\n\n  return (\n    <section id=\"section-why-choose-us\" className=\"w-full bg-dark-mode900 pt-[200px] pb-[200px] px-4 overflow-hidden\">\n      <div id=\"why-choose-us-container\" className=\"max-w-7xl mx-auto\">\n        <div id=\"why-choose-us-header\" className=\"flex flex-col items-center justify-center gap-[60px] mb-20\">\n          <h2 id=\"why-choose-us-title\" className=\"font-semibold text-shadeswhite text-[48px] text-center tracking-[-1.92px] leading-[56px]\">\n            Why Choose Our CRO Agency?\n          </h2>\n\n          <p id=\"why-choose-us-description\" className=\"max-w-2xl font-normal text-shadeswhite text-[20px] text-center tracking-[0px] leading-[24px]\">\n            We don&apos;t just run tests — we deliver measurable business\n            growth.\n          </p>\n        </div>\n\n        <div ref={ref} id=\"why-choose-us-features-grid\" className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-20\">\n          {featureCards.map((card, index) => {\n            const start = index * 0.1;\n            const end = 0.5 + index * 0.15;\n\n            // Use the adjustedProgress for all animations\n            const opacity = useTransform(adjustedProgress, [start, end], [0, 1]);\n            const x = useTransform(adjustedProgress, [start, end], [(1.5 - index) * 300, 0]);\n            const y = useTransform(adjustedProgress, [start, end], [100, 0]);\n            const scale = useTransform(adjustedProgress, [start, end], [0.5, 1]);\n            const rotate = useTransform(adjustedProgress, [start, end], [20 - index * 20, 0]);\n\n            return (\n              <motion.div\n                key={index}\n                id={`why-choose-us-feature-card-${index}`}\n                className={`${card.height} rounded-2xl overflow-hidden border border-solid border-[#6ae49933] backdrop-blur-[7.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(7.5px)_brightness(100%)] bg-[linear-gradient(180deg,rgba(255,255,255,0)_0%,rgba(27,140,70,0.2)_100%),radial-gradient(50%_50%_at_50%_0%,rgba(168,127,255,0.04)_0%,rgba(168,127,255,0)_100%),linear-gradient(0deg,rgba(255,255,255,0.05)_0%,rgba(255,255,255,0.05)_100%)] relative`}\n                style={{\n                  opacity,\n                  x,\n                  y,\n                  scale,\n                  rotate,\n                  transformOrigin: \"center center\",\n                  perspective: 1000,\n                  transformStyle: \"preserve-3d\",\n                  zIndex: 20 - index,\n                }}\n              >\n                <CardContent id={`why-choose-us-feature-card-content-${index}`} className=\"p-0 h-full relative\">\n                  <div id={`why-choose-us-feature-content-${index}`} className=\"flex flex-col w-[266px] items-start gap-3 absolute top-6 left-6\">\n                    <h3 id={`why-choose-us-feature-title-${index}`} className=\"font-semibold text-shadeswhite text-[23px] tracking-[-0.46px] leading-[28px]\">\n                      {card.title}\n                    </h3>\n                    <div\n                      id={`why-choose-us-feature-description-${index}`}\n                      className={`relative ${card.descriptionWidth} [font-family:'Sora',Helvetica] font-normal text-shadeswhite text-[16px] tracking-[0] leading-4`}\n                    >\n                      {card.description}\n                    </div>\n                  </div>\n                  <img\n                    id={`why-choose-us-feature-top-mask-${index}`}\n                    className=\"absolute top-0 right-[57px] w-[180px] h-2\"\n                    alt=\"Mask group\"\n                    src={card.topMask}\n                  />\n                  <div\n                    id={`why-choose-us-feature-blur-element-${index}`}\n                    className={`absolute ${card.blurElement} w-[90px] h-[312px] -rotate-90 backdrop-blur-[17.5px] backdrop-brightness-[100%] [-webkit-backdrop-filter:blur(17.5px)_brightness(100%)] bg-[linear-gradient(270deg,rgba(255,255,255,0.03)_0%,rgba(255,255,255,0.1)_100%)]`}\n                  />\n                  <img\n                    id={`why-choose-us-feature-icon-${index}`}\n                    className={`absolute ${card.iconClasses}`}\n                    alt=\"Feature icon\"\n                    src={card.icon}\n                  />\n                  <img\n                    id={`why-choose-us-feature-bottom-mask-${index}`}\n                    className=\"absolute left-9 bottom-[-7px] w-[180px] h-px\"\n                    alt=\"Mask group\"\n                    src={card.bottomMask}\n                  />\n                </CardContent>\n              </motion.div>\n            );\n          })}\n        </div>\n\n        <div id=\"why-choose-us-cta-section\" className=\"flex justify-center\">\n          <Button \n            id=\"why-choose-us-cta-button\" \n            className=\"px-5 py-3.5 bg-secondary-500 h-auto rounded hover:bg-secondary-500\"\n            onClick={() => {\n              document.getElementById('testimonials-booking-section')?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n            }}\n          >\n            <span id=\"why-choose-us-cta-button-text\" className=\"font-semibold text-neutral-900 text-[18px] tracking-[0px] leading-[21.6px]\">\n              Get Your Free CRO Audit\n            </span>\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n};","size_bytes":9197}},"version":1}